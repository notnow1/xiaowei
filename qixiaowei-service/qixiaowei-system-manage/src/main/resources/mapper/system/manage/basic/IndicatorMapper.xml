<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.qixiaowei.system.manage.mapper.basic.IndicatorMapper">
    <!--    查询指标表-->
    <select id="selectIndicatorByIndicatorId"
            resultType="net.qixiaowei.system.manage.api.dto.basic.IndicatorDTO">
        SELECT
        i.indicator_id,
        i.parent_indicator_id,
        i.ancestors,
        i.indicator_type,
        i.indicator_code,
        i.indicator_name,
        i.sort,
        i.level,
        i.indicator_category_id,
        i.indicator_value_type,
        i.choice_flag,
        i.examine_direction,
        i.indicator_definition,
        i.indicator_formula,
        i.driving_factor_flag,
        i.remark,
        i.delete_flag,
        i.create_by,
        i.create_time,
        i.update_by,
        i.update_time,
        i2.indicator_name AS parent_indicator_name
        FROM indicator i
        LEFT JOIN indicator_category ic ON i.indicator_category_id = ic.indicator_category_id
        AND ic.delete_flag = 0
        LEFT JOIN indicator i2 ON i.parent_indicator_id = i2.indicator_id
        AND i2.delete_flag = 0
        WHERE i.indicator_id = #{indicatorId}
        and i.delete_flag = 0
    </select>

    <!--    查询指标表列表-->
    <select id="selectIndicatorList" resultType="net.qixiaowei.system.manage.api.dto.basic.IndicatorDTO">
        SELECT
        t1.indicator_id,
        t1.parent_indicator_id,
        t1.ancestors,
        t1.indicator_type,
        t1.indicator_code,
        t1.indicator_name,
        t1.sort, t1.level,
        t1.indicator_category_id,
        t1.indicator_value_type,
        t1.choice_flag,
        t1.examine_direction,
        t1.indicator_definition,
        t1.indicator_formula,
        t1.driving_factor_flag,
        t1.remark,
        t1.delete_flag,
        t1.create_by,
        t1.create_time,
        t1.update_by,
        t1.update_time,
        t2.indicator_category_name,
        t3.indicator_name as parent_indicator_name
        FROM indicator t1
        LEFT JOIN indicator_category t2
        ON t1.indicator_category_id = t2.indicator_category_id
        AND t2.delete_flag=0
        LEFT JOIN indicator t3
        ON t1.parent_indicator_id = t3.indicator_id
        AND t3.delete_flag=0
        WHERE t1.delete_flag=0
        <if test="indicator.indicatorId != null">
            and t1.indicator_id=#{indicator.indicatorId}
        </if>
        <if test="indicator.parentIndicatorId != null">
            and t1.parent_indicator_id=#{indicator.parentIndicatorId}
        </if>
        <if test="indicator.ancestors != null and indicator.ancestors != ''">
            and t1.ancestors=#{indicator.ancestors}
        </if>
        <if test="indicator.indicatorType != null">
            and t1.indicator_type=#{indicator.indicatorType}
        </if>
        <if test="indicator.indicatorCode != null and indicator.indicatorCode != ''">
            and t1.indicator_code like concat('%', #{indicator.indicatorCode}, '%')
        </if>
        <if test="indicator.indicatorName != null and indicator.indicatorName != ''">
            and t1.indicator_name like concat('%', #{indicator.indicatorName}, '%')
        </if>
        <if test="indicator.sort != null">
            and t1.sort=#{indicator.sort}
        </if>
        <if test="indicator.level != null">
            and t1.level=#{indicator.level}
        </if>
        <if test="indicator.indicatorCategoryId != null">
            and t1.indicator_category_id=#{indicator.indicatorCategoryId}
        </if>
        <if test="indicator.indicatorValueType != null">
            and t1.indicator_value_type=#{indicator.indicatorValueType}
        </if>
        <if test="indicator.choiceFlag != null">
            and t1.choice_flag=#{indicator.choiceFlag}
        </if>
        <if test="indicator.examineDirection != null">
            and t1.examine_direction=#{indicator.examineDirection}
        </if>
        <if test="indicator.indicatorDefinition != null">
            and t1.indicator_definition=#{indicator.indicatorDefinition}
        </if>
        <if test="indicator.indicatorFormula != null and indicator.indicatorFormula != ''">
            and t1.indicator_formula=#{indicator.indicatorFormula}
        </if>
        <if test="indicator.drivingFactorFlag != null">
            and t1.driving_factor_flag=#{indicator.drivingFactorFlag}
        </if>
        <if test="indicator.remark != null and indicator.remark != ''">
            and t1.remark=#{indicator.remark}
        </if>
        <if test="indicator.deleteFlag != null">
            and t1.delete_flag=#{indicator.deleteFlag}
        </if>
        <if test="indicator.createBy != null">
            and t1.create_by=#{indicator.createBy}
        </if>
        <if test="indicator.createTime != null">
            and t1.create_time=#{indicator.createTime}
        </if>
        <if test="indicator.updateBy != null">
            and t1.update_by=#{indicator.updateBy}
        </if>
        <if test="indicator.updateTime != null">
            and t1.update_time=#{indicator.updateTime}
        </if>
        <if test="indicator.params.indicatorCategoryName != null">
            and t2.indicator_category_name like concat('%', #{indicator.params.indicatorCategoryName}, '%')
        </if>
        <!--    指标编码过滤-->
        <if test="indicator.params.indicatorCodeEqual != null and indicator.params.indicatorCodeEqual.size() > 0">
            AND t1.indicator_code IN
            <foreach item="item"
                     collection="indicator.params.indicatorCodeEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="indicator.params.indicatorCodeNotEqual != null and indicator.params.indicatorCodeNotEqual.size() > 0">
            AND (t1.indicator_code NOT IN
            <foreach item="item"
                     collection="indicator.params.indicatorCodeNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR t1.indicator_code IS NULL
            )
        </if>
        <if test="indicator.params.indicatorCodeLike != null and indicator.params.indicatorCodeLike.size() > 0">
            AND
            <foreach item="item"
                     collection="indicator.params.indicatorCodeLike"
                     index="index" open="(" separator="OR" close=")">
                t1.indicator_code LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <if test="indicator.params.indicatorCodeNotLike != null and indicator.params.indicatorCodeNotLike.size() > 0">
            AND
            <foreach item="item"
                     collection="indicator.params.indicatorCodeNotLike"
                     index="index" open="(" separator="AND" close=")">
                t1.indicator_code NOT LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <!--    指标名称过滤-->
        <if test="indicator.params.indicatorNameEqual != null and indicator.params.indicatorNameEqual.size() > 0">
            AND t1.indicator_name IN
            <foreach item="item"
                     collection="indicator.params.indicatorNameEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="indicator.params.indicatorNameNotEqual != null and indicator.params.indicatorNameNotEqual.size() > 0">
            AND (t1.indicator_name NOT IN
            <foreach item="item"
                     collection="indicator.params.indicatorNameNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR t1.indicator_name IS NULL
            )
        </if>
        <if test="indicator.params.indicatorNameLike != null and indicator.params.indicatorNameLike.size() > 0">
            AND
            <foreach item="item"
                     collection="indicator.params.indicatorNameLike"
                     index="index" open="(" separator="OR" close=")">
                t1.indicator_name LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <if test="indicator.params.indicatorNameNotLike != null and indicator.params.indicatorNameNotLike.size() > 0">
            AND
            <foreach item="item"
                     collection="indicator.params.indicatorNameNotLike"
                     index="index" open="(" separator="AND" close=")">
                t1.indicator_name NOT LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <!--    指标分类    过滤-->
        <if test="indicator.params.indicatorCategoryNameEqual != null and indicator.params.indicatorCategoryNameEqual.size() > 0">
            AND t2.indicator_category_name IN
            <foreach item="item"
                     collection="indicator.params.indicatorCategoryNameEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="indicator.params.indicatorCategoryNameNotEqual != null and indicator.params.indicatorCategoryNameNotEqual.size() > 0">
            AND (t2.indicator_category_name NOT IN
            <foreach item="item"
                     collection="indicator.params.indicatorCategoryNameNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR t2.indicator_category_name IS NULL
            )
        </if>
        <if test="indicator.params.indicatorCategoryNameNull != null">
            and t2.indicator_category_name IS NULL OR t2.indicator_category_name = ''
        </if>
        <if test="indicator.params.indicatorCategoryNameNotNull != null">
            and t2.indicator_category_name IS NOT NULL OR t2.indicator_category_name != ''
        </if>
        <!--    指标类型过滤-->
        <if test="indicator.params.indicatorTypeEqual != null and indicator.params.indicatorTypeEqual.size() > 0">
            AND t1.indicator_type IN
            <foreach item="item"
                     collection="indicator.params.indicatorTypeEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="indicator.params.indicatorTypeNotEqual != null and indicator.params.indicatorTypeNotEqual.size() > 0">
            AND (t1.indicator_type NOT IN
            <foreach item="item"
                     collection="indicator.params.indicatorTypeNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR t1.indicator_type IS NULL
            )
        </if>
        <!--    指标值类型过滤-->
        <if test="indicator.params.indicatorValueTypeEqual != null and indicator.params.indicatorValueTypeEqual.size() > 0">
            AND t1.indicator_value_type IN
            <foreach item="item"
                     collection="indicator.params.indicatorValueTypeEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="indicator.params.indicatorValueTypeNotEqual != null and indicator.params.indicatorValueTypeNotEqual.size() > 0">
            AND (t1.indicator_value_type NOT IN
            <foreach item="item"
                     collection="indicator.params.indicatorValueTypeNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR t1.indicator_value_type IS NULL
            )
        </if>
        <!--    是否必选过滤-->
        <if test="indicator.params.choiceFlagEqual != null and indicator.params.choiceFlagEqual.size() > 0">
            AND t1.choice_flag IN
            <foreach item="item"
                     collection="indicator.params.choiceFlagEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="indicator.params.choiceFlagNotEqual != null and indicator.params.choiceFlagNotEqual.size() > 0">
            AND (t1.choice_flag NOT IN
            <foreach item="item"
                     collection="indicator.params.choiceFlagNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR t1.choice_flag IS NULL
            )
        </if>
        <!--    是否必选过滤-->
        <if test="indicator.params.examineDirectionEqual != null and indicator.params.examineDirectionEqual.size() > 0">
            AND t1.examine_direction IN
            <foreach item="item"
                     collection="indicator.params.examineDirectionEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="indicator.params.examineDirectionNotEqual != null and indicator.params.examineDirectionNotEqual.size() > 0">
            AND (t1.examine_direction NOT IN
            <foreach item="item"
                     collection="indicator.params.examineDirectionNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR t1.examine_direction IS NULL
            )
        </if>
        <!--    上级指标过滤-->
        <if test="indicator.params.parentIndicatorNameEqual != null and indicator.params.parentIndicatorNameEqual.size() > 0">
            AND t3.indicator_name IN
            <foreach item="item"
                     collection="indicator.params.parentIndicatorNameEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="indicator.params.parentIndicatorNameNotEqual != null and indicator.params.parentIndicatorNameNotEqual.size() > 0">
            AND (t3.indicator_name NOT IN
            <foreach item="item"
                     collection="indicator.params.parentIndicatorNameNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR t3.indicator_name IS NULL
            )
        </if>
        <if test="indicator.params.parentIndicatorNameNull != null">
            and t3.indicator_name IS NULL OR t3.indicator_category_name = ''
        </if>
        <if test="indicator.params.parentIndicatorNameNotNull != null">
            and t3.indicator_name IS NOT NULL OR t3.indicator_category_name != ''
        </if>
        <!--    指标层级过滤-->
        <if test="indicator.params.levelEqual != null and indicator.params.levelEqual.size() > 0">
            AND t1.level IN
            <foreach item="item"
                     collection="indicator.params.levelEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="indicator.params.levelNotEqual != null and indicator.params.levelNotEqual.size() > 0">
            AND (t1.level NOT IN
            <foreach item="item"
                     collection="indicator.params.levelNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR t1.level IS NULL
            )
        </if>
        <!--        <if test="indicator.params.levelGreaterThan != null">-->
        <!--            AND-->
        <!--            <foreach item="item"-->
        <!--                     collection="indicator.params.levelGreaterThan"-->
        <!--                     index="index" open="(" separator="OR" close=")">-->
        <!--                t1.level &gt; #{item}-->
        <!--            </foreach>-->
        <!--        </if>-->
        <!--        <if test="indicator.params.levelNotGreaterThan != null">-->
        <!--            AND-->
        <!--            <foreach item="item"-->
        <!--                     collection="indicator.params.levelNotGreaterThan"-->
        <!--                     index="index" open="(" separator="OR" close=")">-->
        <!--                t1.level &lt;= #{item}-->
        <!--            </foreach>-->
        <!--        </if>-->
        <!--        <if test="indicator.params.levelLessThan != null">-->
        <!--            AND-->
        <!--            <foreach item="item"-->
        <!--                     collection="indicator.params.levelLessThan"-->
        <!--                     index="index" open="(" separator="OR" close=")">-->
        <!--                t1.level &lt; #{item}-->
        <!--            </foreach>-->
        <!--        </if>-->
        <!--        <if test="indicator.params.levelNotLessThan != null">-->
        <!--            AND-->
        <!--            <foreach item="item"-->
        <!--                     collection="indicator.params.levelNotLessThan"-->
        <!--                     index="index" open="(" separator="OR" close=")">-->
        <!--                t1.level &gt;= #{item}-->
        <!--            </foreach>-->
        <!--        </if>-->
        <!--    是否驱动因素过滤-->
        <if test="indicator.params.drivingFactorFlagEqual != null and indicator.params.drivingFactorFlagEqual.size() > 0">
            AND t1.driving_factor_flag IN
            <foreach item="item"
                     collection="indicator.params.drivingFactorFlagEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="indicator.params.drivingFactorFlagNotEqual != null and indicator.params.drivingFactorFlagNotEqual.size() > 0">
            AND (t1.driving_factor_flag NOT IN
            <foreach item="item"
                     collection="indicator.params.drivingFactorFlagNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR t1.driving_factor_flag IS NULL
            )
        </if>
        <!-- 数据范围过滤 -->
        ${indicator.params.dataScope}
        ORDER BY t1.create_time DESC
    </select>
    <!--    级联查询父菜单-->
    <select id="selectIndicatorTree" resultMap="treeVoMap">
        SELECT
        indicator_id, parent_indicator_id, ancestors, indicator_type, indicator_code, indicator_name, sort, level,
        indicator_category_id, indicator_value_type, choice_flag, examine_direction, indicator_definition,
        indicator_formula, driving_factor_flag, remark, delete_flag, create_by, create_time, update_by, update_time
        FROM indicator
        WHERE parent_indicator_id = 0 and delete_flag = 0
    </select>

    <select id="getIndicatorCodes" resultType="java.lang.String">
        SELECT indicator_code FROM indicator WHERE delete_flag=0 AND indicator_code LIKE CONCAT(#{prefixCodeRule},'%')
        ORDER BY indicator_code ASC
    </select>

    <!--级联查询子菜单-->
    <select id="findIndicatorTreeByPid" resultMap="treeVoMap">
        SELECT
        indicator_id, parent_indicator_id, ancestors, indicator_type, indicator_code, indicator_name, sort, level,
        indicator_category_id, indicator_value_type, choice_flag, examine_direction, indicator_definition,
        indicator_formula, driving_factor_flag, remark, delete_flag, create_by, create_time, update_by, update_time
        FROM indicator
        where parent_indicator_id = #{parentIndicatorId} and delete_flag = 0
    </select>
    <!--返回类型-->
    <resultMap id="treeVoMap" type="net.qixiaowei.system.manage.api.dto.basic.IndicatorDTO">
        <id column="indicator_id" property="indicatorId" jdbcType="BIGINT"/>
        <result column="parent_indicator_id" property="parentIndicatorId" jdbcType="BIGINT"/>
        <result column="ancestors" property="ancestors" jdbcType="VARCHAR"/>
        <result column="indicator_type" property="indicatorType" jdbcType="TINYINT"/>
        <result column="indicator_code" property="indicatorCode" jdbcType="VARCHAR"/>
        <result column="indicator_name" property="indicatorName" jdbcType="VARCHAR"/>
        <result column="sort" property="sort" jdbcType="INTEGER"/>
        <result column="level" property="level" jdbcType="TINYINT"/>
        <result column="indicator_category_id" property="indicatorCategoryId" jdbcType="BIGINT"/>
        <result column="indicator_value_type" property="indicatorValueType" jdbcType="TINYINT"/>
        <result column="choice_flag" property="choiceFlag" jdbcType="TINYINT"/>
        <result column="examine_direction" property="examineDirection" jdbcType="TINYINT"/>
        <result column="indicator_definition" property="indicatorDefinition" jdbcType="VARCHAR"/>
        <result column="indicator_formula" property="indicatorFormula" jdbcType="VARCHAR"/>
        <result column="driving_factor_flag" property="drivingFactorFlag" jdbcType="TINYINT"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="delete_flag" property="deleteFlag" jdbcType="TINYINT"/>
        <result column="create_by" property="createBy" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_by" property="updateBy" jdbcType="BIGINT"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <collection property="children" ofType="net.qixiaowei.system.manage.api.dto.basic.IndustryDTO"
                    column="indicator_id" select="findIndicatorTreeByPid"/>
    </resultMap>
    <!--根据父级查找子级-->
    <select id="selectSon" resultType="net.qixiaowei.system.manage.api.dto.basic.IndicatorDTO">
        SELECT
        indicator_id, parent_indicator_id, ancestors, indicator_type, indicator_code, indicator_name, sort, level,
        indicator_category_id, indicator_value_type, choice_flag, examine_direction, indicator_definition,
        indicator_formula, driving_factor_flag, remark, delete_flag, create_by, create_time, update_by, update_time
        FROM indicator
        WHERE
        FIND_IN_SET(#{indicatorId},ancestors)
        AND delete_flag = 0
    </select>
    <!--根据父级id查找子级的最大排序值-->
    <select id="selectSortByIndicatorId" resultType="java.lang.Integer">
        SELECT
        IFNULL(max(sort),0)
        FROM indicator
        WHERE
        FIND_IN_SET(#{indicatorId},ancestors)
        AND delete_flag = 0
    </select>
    <!-- 根据父级list批量查找子级-->
    <select id="selectSons" resultType="java.lang.Long">
        SELECT
        indicator_id
        FROM indicator
        WHERE
        <foreach item="item" index="index"
                 collection="indicatorIds"
                 separator="or">
            FIND_IN_SET(#{item},ancestors)
        </foreach>
        AND delete_flag = 0
    </select>
    <!--新增指标表-->
    <insert id="insertIndicator" useGeneratedKeys="true" keyProperty="indicatorId">
        INSERT INTO indicator
        (parent_indicator_id,ancestors,indicator_type,indicator_code,indicator_name,sort,level,indicator_category_id,indicator_value_type,choice_flag,examine_direction,indicator_definition,indicator_formula,driving_factor_flag,remark,delete_flag,create_by,create_time,update_by,update_time)
        VALUES
        (#{indicator.parentIndicatorId},#{indicator.ancestors},#{indicator.indicatorType},#{indicator.indicatorCode},#{indicator.indicatorName},#{indicator.sort},#{indicator.level},#{indicator.indicatorCategoryId},#{indicator.indicatorValueType},#{indicator.choiceFlag},#{indicator.examineDirection},#{indicator.indicatorDefinition},#{indicator.indicatorFormula},#{indicator.drivingFactorFlag},#{indicator.remark},#{indicator.deleteFlag},#{indicator.createBy},#{indicator.createTime},#{indicator.updateBy},#{indicator.updateTime})
    </insert>
    <!--修改指标表-->
    <update id="updateIndicator">
        UPDATE indicator
        SET
        <if test="indicator.parentIndicatorId != null">
            parent_indicator_id=#{indicator.parentIndicatorId},
        </if>
        <if test="indicator.indicatorType != null">
            indicator_type=#{indicator.indicatorType},
        </if>
        <if test="indicator.indicatorCode != null and indicator.indicatorCode != ''">
            indicator_code=#{indicator.indicatorCode},
        </if>
        <if test="indicator.indicatorName != null and indicator.indicatorName != ''">
            indicator_name=#{indicator.indicatorName},
        </if>
        <if test="indicator.sort != null">
            sort=#{indicator.sort},
        </if>
        <if test="indicator.level != null">
            level=#{indicator.level},
        </if>
        <if test="indicator.indicatorCategoryId != null">
            indicator_category_id=#{indicator.indicatorCategoryId},
        </if>
        <if test="indicator.indicatorValueType != null">
            indicator_value_type=#{indicator.indicatorValueType},
        </if>
        <if test="indicator.choiceFlag != null">
            choice_flag=#{indicator.choiceFlag},
        </if>
        <if test="indicator.examineDirection != null">
            examine_direction=#{indicator.examineDirection},
        </if>
        <if test="indicator.indicatorDefinition != null and indicator.indicatorDefinition != ''">
            indicator_definition=#{indicator.indicatorDefinition},
        </if>
        <if test="indicator.indicatorFormula != null and indicator.indicatorFormula != ''">
            indicator_formula=#{indicator.indicatorFormula},
        </if>
        <if test="indicator.drivingFactorFlag != null">
            driving_factor_flag=#{indicator.drivingFactorFlag},
        </if>
        <if test="indicator.remark != null and indicator.remark != ''">
            remark=#{indicator.remark},
        </if>
        <if test="indicator.deleteFlag != null">
            delete_flag=#{indicator.deleteFlag},
        </if>
        <if test="indicator.createBy != null">
            create_by=#{indicator.createBy},
        </if>
        <if test="indicator.createTime != null">
            create_time=#{indicator.createTime},
        </if>
        <if test="indicator.updateBy != null">
            update_by=#{indicator.updateBy},
        </if>
        <if test="indicator.updateTime != null">
            update_time=#{indicator.updateTime},
        </if>
        ancestors=#{indicator.ancestors}
        WHERE
        indicator_id=#{indicator.indicatorId}
        AND delete_flag = 0
    </update>
    <!--逻辑删除指标表-->
    <update id="logicDeleteIndicatorByIndicatorId">
        UPDATE indicator
        SET delete_flag= 1,
        update_by=#{updateBy},
        update_time=#{updateTime}
        WHERE
        indicator_id=#{indicator.indicatorId}
        AND delete_flag = 0
    </update>
    <!--逻辑批量删除指标表-->
    <update id="logicDeleteIndicatorByIndicatorIds">
        UPDATE indicator
        SET delete_flag= 1,
        update_by=#{updateBy},
        update_time=#{updateTime}
        WHERE
        indicator_id IN
        <foreach item="item"
                 collection="indicatorIds"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <!--批量新增指标表-->
    <insert id="batchIndicator">
        INSERT INTO indicator
        (parent_indicator_id,ancestors,indicator_type,indicator_code,indicator_name,sort,level,indicator_category_id,indicator_value_type,choice_flag,examine_direction,indicator_definition,indicator_formula,driving_factor_flag,remark,delete_flag,create_by,create_time,update_by,update_time)
        VALUES
        <foreach item="item" index="index"
                 collection="indicators"
                 separator=",">
            (#{item.parentIndicatorId},#{item.ancestors},#{item.indicatorType},#{item.indicatorCode},#{item.indicatorName},#{item.sort},#{item.level},#{item.indicatorCategoryId},#{item.indicatorValueType},#{item.choiceFlag},#{item.examineDirection},#{item.indicatorDefinition},#{item.indicatorFormula},#{item.drivingFactorFlag},#{item.remark},#{item.deleteFlag},#{item.createBy},#{item.createTime},#{item.updateBy},#{item.updateTime})
        </foreach>
    </insert>

    <!--物理删除指标表-->
    <delete id="deleteIndicatorByIndicatorId">
        DELETE FROM indicator
        WHERE indicator_id=#{indicator}

    </delete>
    <!--物理批量删除指标表-->
    <delete id="deleteIndicatorByIndicatorIds">
        DELETE FROM indicator
        WHERE indicator_id IN
        <foreach item="item"
                 collection="indicatorIds"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <!--批量修改指标表-->
    <update id="updateIndicators">
        update indicator
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="parent_indicator_id=case" suffix="end,">
                <foreach collection="indicatorList" item="item" index="index">
                    <if test="item.parentIndicatorId != null">
                        when indicator_id=#{item.indicatorId} then #{item.parentIndicatorId}
                    </if>
                </foreach>
            </trim>
            <trim prefix="ancestors=case" suffix="end,">
                <foreach collection="indicatorList" item="item" index="index">
                    when indicator_id=#{item.indicatorId} then #{item.ancestors}
                </foreach>
            </trim>
            <trim prefix="indicator_type=case" suffix="end,">
                <foreach collection="indicatorList" item="item" index="index">
                    <if test="item.indicatorType != null">
                        when indicator_id=#{item.indicatorId} then #{item.indicatorType}
                    </if>
                </foreach>
            </trim>
            <trim prefix="indicator_code=case" suffix="end,">
                <foreach collection="indicatorList" item="item" index="index">
                    <if test="item.indicatorCode != null and item.indicatorCode != ''">
                        when indicator_id=#{item.indicatorId} then #{item.indicatorCode}
                    </if>
                </foreach>
            </trim>
            <trim prefix="indicator_name=case" suffix="end,">
                <foreach collection="indicatorList" item="item" index="index">
                    <if test="item.indicatorName != null and item.indicatorName != ''">
                        when indicator_id=#{item.indicatorId} then #{item.indicatorName}
                    </if>
                </foreach>
            </trim>
            <trim prefix="sort=case" suffix="end,">
                <foreach collection="indicatorList" item="item" index="index">
                    <if test="item.sort != null">
                        when indicator_id=#{item.indicatorId} then #{item.sort}
                    </if>
                </foreach>
            </trim>
            <trim prefix="level=case" suffix="end,">
                <foreach collection="indicatorList" item="item" index="index">
                    <if test="item.level != null">
                        when indicator_id=#{item.indicatorId} then #{item.level}
                    </if>
                </foreach>
            </trim>
            <trim prefix="indicator_category_id=case" suffix="end,">
                <foreach collection="indicatorList" item="item" index="index">
                    <if test="item.indicatorCategoryId != null">
                        when indicator_id=#{item.indicatorId} then #{item.indicatorCategoryId}
                    </if>
                </foreach>
            </trim>
            <trim prefix="indicator_value_type=case" suffix="end,">
                <foreach collection="indicatorList" item="item" index="index">
                    <if test="item.indicatorValueType != null">
                        when indicator_id=#{item.indicatorId} then #{item.indicatorValueType}
                    </if>
                </foreach>
            </trim>
            <trim prefix="choice_flag=case" suffix="end,">
                <foreach collection="indicatorList" item="item" index="index">
                    <if test="item.choiceFlag != null">
                        when indicator_id=#{item.indicatorId} then #{item.choiceFlag}
                    </if>
                </foreach>
            </trim>
            <trim prefix="examine_direction=case" suffix="end,">
                <foreach collection="indicatorList" item="item" index="index">
                    <if test="item.examineDirection != null">
                        when indicator_id=#{item.indicatorId} then #{item.examineDirection}
                    </if>
                </foreach>
            </trim>
            <trim prefix="indicator_definition=case" suffix="end,">
                <foreach collection="indicatorList" item="item" index="index">
                    <if test="item.indicatorDefinition != null and item.indicatorDefinition != ''">
                        when indicator_id=#{item.indicatorId} then #{item.indicatorDefinition}
                    </if>
                </foreach>
            </trim>
            <trim prefix="indicator_formula=case" suffix="end,">
                <foreach collection="indicatorList" item="item" index="index">
                    <if test="item.indicatorFormula != null and item.indicatorFormula != ''">
                        when indicator_id=#{item.indicatorId} then #{item.indicatorFormula}
                    </if>
                </foreach>
            </trim>
            <trim prefix="driving_factor_flag=case" suffix="end,">
                <foreach collection="indicatorList" item="item" index="index">
                    <if test="item.drivingFactorFlag != null">
                        when indicator_id=#{item.indicatorId} then #{item.drivingFactorFlag}
                    </if>
                </foreach>
            </trim>
            <trim prefix="remark=case" suffix="end,">
                <foreach collection="indicatorList" item="item" index="index">
                    <if test="item.remark != null and item.remark != ''">
                        when indicator_id=#{item.indicatorId} then #{item.remark}
                    </if>
                </foreach>
            </trim>
            <trim prefix="delete_flag=case" suffix="end,">
                <foreach collection="indicatorList" item="item" index="index">
                    <if test="item.deleteFlag != null">
                        when indicator_id=#{item.indicatorId} then #{item.deleteFlag}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_by=case" suffix="end,">
                <foreach collection="indicatorList" item="item" index="index">
                    <if test="item.createBy != null">
                        when indicator_id=#{item.indicatorId} then #{item.createBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_time=case" suffix="end,">
                <foreach collection="indicatorList" item="item" index="index">
                    <if test="item.createTime != null">
                        when indicator_id=#{item.indicatorId} then #{item.createTime}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_by=case" suffix="end,">
                <foreach collection="indicatorList" item="item" index="index">
                    <if test="item.updateBy != null">
                        when indicator_id=#{item.indicatorId} then #{item.updateBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_time=case" suffix="end,">
                <foreach collection="indicatorList" item="item" index="index">
                    <if test="item.updateTime != null">
                        when indicator_id=#{item.indicatorId} then #{item.updateTime}
                    </if>
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="indicatorList" separator="or" item="item" index="index">
            indicator_id=#{item.indicatorId}
        </foreach>
    </update>
    <!--指标编码唯一性校验-->

    <!--被引用校验-->
    <select id="selectIndicatorCountByIndicatorCategoryId"
            resultType="net.qixiaowei.system.manage.api.dto.basic.IndicatorDTO">
        SELECT
        indicator_id, parent_indicator_id, ancestors, indicator_type, indicator_code, indicator_name, sort, level,
        indicator_category_id, indicator_value_type, choice_flag, examine_direction, indicator_definition,
        indicator_formula, driving_factor_flag, remark, delete_flag, create_by, create_time, update_by, update_time
        FROM indicator
        WHERE delete_flag = 0
        AND indicator_category_id IN
        <foreach collection="indicatorCategoryIds"
                 item="item"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <!--根据id集合判断是否存在-->
    <select id="isExist"
            resultType="net.qixiaowei.system.manage.api.dto.basic.IndicatorDTO">
        SELECT indicator_id, parent_indicator_id, ancestors, indicator_type, indicator_code, indicator_name, sort,
        level,
        indicator_category_id, indicator_value_type, choice_flag, examine_direction, indicator_definition,
        indicator_formula, driving_factor_flag, remark, delete_flag, create_by, create_time, update_by, update_time
        FROM indicator
        WHERE indicator_id
        IN
        <foreach item="item"
                 collection="indicatorIds"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
        and delete_flag = 0
    </select>
    <select id="getIndicatorByCode" resultType="net.qixiaowei.system.manage.api.dto.basic.IndicatorDTO">
        SELECT
        indicator_id, parent_indicator_id, ancestors, indicator_type, indicator_code, indicator_name, sort, level,
        indicator_category_id, indicator_value_type, choice_flag, examine_direction, indicator_definition,
        indicator_formula, driving_factor_flag, remark, delete_flag, create_by, create_time, update_by, update_time
        FROM indicator
        WHERE BINARY indicator_code=#{indicatorCode}
        AND delete_flag = 0
    </select>
    <select id="selectLevel" resultType="java.lang.Integer">
        SELECT
        level
        FROM indicator
        WHERE delete_flag = 0
        GROUP BY `level`
        ORDER BY `level` ASC
    </select>
    <select id="selectIndicatorByCodeList" resultType="net.qixiaowei.system.manage.api.dto.basic.IndicatorDTO">
        SELECT
        indicator_id, parent_indicator_id, ancestors, indicator_type, indicator_code, indicator_name, sort, level,
        indicator_category_id, indicator_value_type, choice_flag, examine_direction, indicator_definition,
        indicator_formula, driving_factor_flag
        FROM indicator
        WHERE delete_flag = 0
        AND indicator_code
        IN
        <foreach item="item"
                 collection="indicatorCodes"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
        order by instr(#{indicatorCodes},indicator_code)
    </select>
    <!--查找目标制定指标列表-->
    <select id="selectTargetIndicatorList" resultType="net.qixiaowei.system.manage.api.dto.basic.IndicatorDTO">
        SELECT
        indicator_id, parent_indicator_id, ancestors, indicator_type, indicator_code, indicator_name, sort, level,
        indicator_category_id, indicator_value_type, choice_flag, examine_direction, indicator_definition,
        indicator_formula, driving_factor_flag
        FROM indicator
        WHERE delete_flag = 0
    </select>
    <!--通过指标IDS查找指标-->
    <select id="selectIndicatorByIds" resultType="net.qixiaowei.system.manage.api.dto.basic.IndicatorDTO">
        SELECT
        indicator_id, parent_indicator_id, ancestors, indicator_type, indicator_code, indicator_name, sort, level,
        indicator_category_id, indicator_value_type, choice_flag, examine_direction, indicator_definition,
        indicator_formula, driving_factor_flag
        FROM indicator
        WHERE delete_flag = 0
        AND indicator_id
        IN
        <foreach collection="indicatorIds" open="(" close=")" item="item" index="index" separator=",">
            #{item}
        </foreach>
    </select>
    <!--通过指标名称获取指标列表-->
    <select id="selectIndicatorByNames" resultType="net.qixiaowei.system.manage.api.dto.basic.IndicatorDTO">
        SELECT
        indicator_id, parent_indicator_id, ancestors, indicator_type, indicator_code, indicator_name, sort, level,
        indicator_category_id, indicator_value_type, choice_flag, examine_direction, indicator_definition,
        indicator_formula, driving_factor_flag
        FROM indicator
        WHERE delete_flag = 0
        AND indicator_name
        IN
        <foreach collection="indicatorNames" open="(" close=")" item="item" index="index" separator=",">
            #{item}
        </foreach>
    </select>
    <select id="selectAncestors" resultType="net.qixiaowei.system.manage.api.dto.basic.IndicatorDTO">
        SELECT
        indicator_id,
        parent_indicator_id,
        ancestors,
        indicator_type,
        indicator_code,
        indicator_name,
        sort,
        LEVEL,
        indicator_category_id,
        indicator_value_type,
        choice_flag,
        examine_direction,
        indicator_definition,
        indicator_formula,
        driving_factor_flag,
        remark,
        delete_flag,
        create_by,
        create_time,
        update_by,
        update_time
        FROM
        (
        SELECT
        indicator_id,
        parent_indicator_id,
        ancestors,
        indicator_type,
        indicator_code,
        indicator_name,
        sort,
        LEVEL,
        indicator_category_id,
        indicator_value_type,
        choice_flag,
        examine_direction,
        indicator_definition,
        indicator_formula,
        driving_factor_flag,
        remark,
        delete_flag,
        create_by,
        create_time,
        update_by,
        update_time
        FROM
        indicator
        WHERE
        delete_flag = 0
        <if test="indicatorId != null">
            and indicator_id=#{indicatorId}
        </if>
        UNION
        SELECT
        indicator_id,
        parent_indicator_id,
        ancestors,
        indicator_type,
        indicator_code,
        indicator_name,
        sort,
        LEVEL,
        indicator_category_id,
        indicator_value_type,
        choice_flag,
        examine_direction,
        indicator_definition,
        indicator_formula,
        driving_factor_flag,
        remark,
        delete_flag,
        create_by,
        create_time,
        update_by,
        update_time
        FROM
        indicator
        WHERE
        delete_flag = 0
        <if test="indicatorId != null">
            AND find_in_set( #{indicatorId}, ancestors )
        </if>
        ) AS ancestors
    </select>
    <!--获取指标最大层级-->

    <!--新增时修改指标祖级列表ID-->
    <update id="updateAncestors">
        UPDATE indicator
        SET
        <if test="indicator.ancestors != null and indicator.ancestors != ''">
            ancestors=#{indicator.ancestors},
        </if>
        <if test="indicator.level != null and indicator.level != ''">
            level=#{indicator.level},
        </if>
        <if test="indicator.updateBy != null and indicator.updateBy != ''">
            update_by=#{indicator.updateBy},
        </if>
        <if test="indicator.updateTime != null">
            update_time=#{indicator.updateTime}
        </if>
        WHERE
        indicator_id=#{indicator.indicatorId}
        AND delete_flag = 0
    </update>
</mapper>


