<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.qixiaowei.system.manage.mapper.user.UserMapper">


    <select id="checkUserAccountUnique" parameterType="String" resultType="int">
        select count(1) FROM user WHERE user_account=#{userAccount} and delete_flag = 0 LIMIT 1
    </select>

    <select id="checkMobilePhoneUnique" parameterType="String"
            resultType="net.qixiaowei.system.manage.api.dto.user.UserDTO">
        SELECT user_id, mobile_phone FROM user WHERE mobile_phone=#{mobilePhone} and delete_flag = 0 LIMIT 1
    </select>

    <select id="checkEmailUnique" parameterType="String"
            resultType="net.qixiaowei.system.manage.api.dto.user.UserDTO">
        SELECT user_id, email FROM user WHERE email=#{email} and delete_flag = 0 LIMIT 1
    </select>

    <select id="checkUserUnique" resultType="net.qixiaowei.system.manage.api.dto.user.UserDTO">
        SELECT
        user_id, user_type, employee_id, user_account, mobile_phone, email
        FROM user
        WHERE delete_flag=0
        AND ( email=#{user.email}
        <if test="user.userAccount != null and user.userAccount != ''">
            OR user_account = #{user.userAccount}
        </if>
        )
    </select>

    <select id="selectUserByUserAccountAndTenantId"
            resultType="net.qixiaowei.system.manage.api.dto.user.UserDTO">
        SELECT
        u.user_id, u.user_type,u.employee_id, u.user_account, u.password, u.user_name, u.mobile_phone, u.email,
        u.avatar, u.remark,
        u.status,
        u.delete_flag, u.create_by, u.create_time, u.update_by,
        u.update_time,e.employee_name,e.employee_code,u.tenant_id,
        p.post_id,
        p.post_name,
        d.department_id,
        d.department_name
        FROM user u
        LEFT JOIN employee e ON e.employee_id = u.employee_id AND e.delete_flag = 0
        LEFT JOIN department d ON d.department_id = e.employee_department_id and d.delete_flag = 0
        LEFT JOIN post p ON p.post_id = e.employee_post_id and p.delete_flag = 0
        WHERE u.user_account=#{userAccount} and u.tenant_id=#{tenantId}
        and u.delete_flag = 0
    </select>

    <select id="selectUserIdsByDepartmentId"
            resultType="java.lang.Long">
        SELECT
        u.user_id
        FROM user u
        LEFT JOIN employee e ON e.employee_id = u.employee_id AND e.delete_flag = 0
        LEFT JOIN department d ON d.department_id = e.employee_department_id and d.delete_flag = 0
        WHERE u.delete_flag = 0
        <if test="dataScope != null ">
            <choose>
                <when test="dataScope == 2">
                    AND (d.department_id = #{departmentId} OR FIND_IN_SET( #{departmentId} , ancestors ) )
                </when>
                <when test="dataScope == 3">
                    AND d.department_id = #{departmentId}
                </when>
                <otherwise>
                    <if test="employeeId != null ">
                        AND d.department_leader_id = #{employeeId}
                    </if>
                </otherwise>
            </choose>
        </if>
    </select>

    <select id="selectUserByUserAccount"
            resultType="net.qixiaowei.system.manage.api.dto.user.UserDTO">
        SELECT
        u.user_id, u.user_type, u.employee_id, u.user_account, u.password, u.user_name, u.mobile_phone, u.email,
        u.avatar, u.remark,
        u.status,
        u.delete_flag, u.create_by, u.create_time, u.update_by, u.update_time,e.employee_name
        FROM user u
        LEFT JOIN employee e ON e.employee_id = u.employee_id AND e.delete_flag = 0
        WHERE u.user_account=#{userAccount}
        and u.delete_flag = 0
    </select>

    <!--    查询用户表-->
    <select id="selectUserByUserId"
            resultType="net.qixiaowei.system.manage.api.dto.user.UserDTO">
        SELECT
        u.user_id, u.user_type, u.employee_id, u.user_account, u.password, u.user_name, u.mobile_phone, u.email,
        u.avatar, u.remark,
        u.status,
        u.delete_flag, u.create_by, u.create_time, u.update_by, u.update_time,
        e.employee_name,
        p.post_id,
        p.post_name,
        d.department_id,
        d.department_name,
        t.tenant_id,
        t.tenant_name,
        t.tenant_logo
        FROM user u
        LEFT JOIN employee e ON e.employee_id=u.employee_id AND e.delete_flag = 0
        LEFT JOIN tenant t ON t.tenant_id = u.tenant_id
        left join department d ON d.department_id=e.employee_department_id and d.delete_flag = 0
        left join post p ON p.post_id=e.employee_post_id and p.delete_flag = 0
        WHERE u.user_id=#{userId}
        and u.delete_flag = 0
    </select>

    <select id="selectAllocatedList"
            resultType="net.qixiaowei.system.manage.api.dto.user.UserDTO">
        SELECT distinct
        u.user_id, u.user_type, u.employee_id, u.user_account, u.password, u.user_name, u.mobile_phone, u.email,
        u.avatar, u.remark,
        u.status,
        u.delete_flag, u.create_by, u.create_time, u.update_by, u.update_time,e.employee_name
        FROM user u
        LEFT JOIN employee e ON e.employee_id=u.employee_id AND e.delete_flag = 0
        LEFT JOIN user_role ur on ur.user_id = u.user_id AND ur.delete_flag = 0
        LEFT JOIN role r on ur.role_id = r.role_id AND r.delete_flag = 0
        WHERE u.delete_flag = 0 AND r.role_id = #{user.params.roleId}
        <if test="user.userAccount != null and user.userAccount != ''">
            and u.user_account LIKE concat('%', #{user.userAccount}, '%')
        </if>
        <if test="user.mobilePhone != null and user.mobilePhone != ''">
            and u.mobile_phone LIKE concat('%', #{user.mobilePhone}, '%')
        </if>
        <if test="user.email != null and user.email != ''">
            and u.email=#{user.email}
        </if>
        <if test="user.status != null">
            and u.status=#{user.status}
        </if>
        <if test="user.params.employeeName != null and user.params.employeeName != ''">
            AND e.employee_name LIKE concat('%', #{user.params.employeeName}, '%')
        </if>
    </select>

    <!--    查询用户表列表-->
    <select id="selectUserList" resultType="net.qixiaowei.system.manage.api.dto.user.UserDTO">
        SELECT
        u.user_id, u.user_type ,u.employee_id, u.user_account, u.password, u.user_name, u.mobile_phone, u.email,
        u.avatar, u.remark,
        u.status,
        u.delete_flag, u.create_by, u.create_time, u.update_by, u.update_time,e.employee_name,GROUP_CONCAT(r.role_name) AS roleNames
        FROM user u
        LEFT JOIN employee e ON e.employee_id=u.employee_id AND e.delete_flag = 0
        LEFT JOIN user_role ur ON ur.user_id = u.user_id AND ur.delete_flag = 0
        LEFT JOIN role r ON r.role_id = ur.role_id AND ur.delete_flag = 0
        WHERE u.delete_flag=0
        <if test="user.userId != null">
            and u.user_id=#{user.userId}
        </if>
        <if test="user.userAccount != null and user.userAccount != ''">
            and u.user_account LIKE concat('%', #{user.userAccount}, '%')
        </if>
        <if test="user.mobilePhone != null and user.mobilePhone != ''">
            and u.mobile_phone LIKE concat('%', #{user.mobilePhone}, '%')
        </if>
        <if test="user.email != null and user.email != ''">
            and u.email LIKE concat('%', #{user.email}, '%')
        </if>
        <if test="user.status != null">
            and u.status=#{user.status}
        </if>
        <if test="user.params.employeeName != null and user.params.employeeName != ''">
            AND e.employee_name LIKE concat('%', #{user.params.employeeName}, '%')
        </if>
        <!-- 员工姓名过滤  -->
        <if test="user.params.employeeNameEqual != null and user.params.employeeNameEqual.size() > 0">
            AND e.employee_name IN
            <foreach item="item"
                     collection="user.params.employeeNameEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="user.params.employeeNameNotEqual != null and user.params.employeeNameNotEqual.size() > 0">
            AND (e.employee_name NOT IN
            <foreach item="item"
                     collection="user.params.employeeNameNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR e.employee_name IS NULL
            )
        </if>
        <!-- 帐号过滤  -->
        <if test="user.params.userAccountEqual != null and user.params.userAccountEqual.size() > 0">
            AND u.user_account IN
            <foreach item="item"
                     collection="user.params.userAccountEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="user.params.userAccountNotEqual != null and user.params.userAccountNotEqual.size() > 0">
            AND u.user_account NOT IN
            <foreach item="item"
                     collection="user.params.userAccountNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="user.params.userAccountLike != null and user.params.userAccountLike.size() > 0">
            AND
            <foreach item="item"
                     collection="user.params.userAccountLike"
                     index="index" open="(" separator="OR" close=")">
                u.user_account LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <if test="user.params.userAccountNotLike != null and user.params.userAccountNotLike.size() > 0">
            AND
            <foreach item="item"
                     collection="user.params.userAccountNotLike"
                     index="index" open="(" separator="AND" close=")">
                u.user_account NOT LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <!-- 手机号码过滤  -->
        <if test="user.params.mobilePhoneEqual != null and user.params.mobilePhoneEqual.size() > 0">
            AND u.mobile_phone IN
            <foreach item="item"
                     collection="user.params.mobilePhoneEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="user.params.mobilePhoneNotEqual != null and user.params.mobilePhoneNotEqual.size() > 0">
            AND (u.mobile_phone NOT IN
            <foreach item="item"
                     collection="user.params.mobilePhoneNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR u.mobile_phone IS NULL
            )
        </if>
        <if test="user.params.mobilePhoneLike != null and user.params.mobilePhoneLike.size() > 0">
            AND
            <foreach item="item"
                     collection="user.params.mobilePhoneLike"
                     index="index" open="(" separator="OR" close=")">
                u.mobile_phone LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <if test="user.params.mobilePhoneNotLike != null and user.params.mobilePhoneNotLike.size() > 0">
            AND (
            <foreach item="item"
                     collection="user.params.mobilePhoneNotLike"
                     index="index" open="(" separator="AND" close=")">
                u.mobile_phone NOT LIKE concat('%', #{item}, '%')
            </foreach>
            OR u.mobile_phone IS NULL
            )
        </if>
        <!-- 邮箱过滤  -->
        <if test="user.params.emailEqual != null and user.params.emailEqual.size() > 0">
            AND u.email IN
            <foreach item="item"
                     collection="user.params.emailEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="user.params.emailNotEqual != null and user.params.emailNotEqual.size() > 0">
            AND ( u.email NOT IN
            <foreach item="item"
                     collection="user.params.emailNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR u.email IS NULL
            )
        </if>
        <if test="user.params.emailLike != null and user.params.emailLike.size() > 0">
            AND
            <foreach item="item"
                     collection="user.params.emailLike"
                     index="index" open="(" separator="OR" close=")">
                u.email LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <if test="user.params.emailNotLike != null and user.params.emailNotLike.size() > 0">
            AND (
            <foreach item="item"
                     collection="user.params.emailNotLike"
                     index="index" open="(" separator="AND" close=")">
                u.email NOT LIKE concat('%', #{item}, '%')
            </foreach>
            OR u.email IS NULL
            )
        </if>
        <!-- 用户姓名过滤  -->
        <if test="user.params.userNameEqual != null and user.params.userNameEqual.size() > 0">
            AND u.user_name IN
            <foreach item="item"
                     collection="user.params.userNameEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="user.params.userNameNotEqual != null and user.params.userNameNotEqual.size() > 0">
            AND (u.user_name NOT IN
            <foreach item="item"
                     collection="user.params.userNameNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR u.user_name IS NULL
            )
        </if>
        <if test="user.params.userNameLike != null and user.params.userNameLike.size() > 0">
            AND
            <foreach item="item"
                     collection="user.params.userNameLike"
                     index="index" open="(" separator="OR" close=")">
                u.user_name LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <if test="user.params.userNameNotLike != null and user.params.userNameNotLike.size() > 0">
            AND (
            <foreach item="item"
                     collection="user.params.userNameNotLike"
                     index="index" open="(" separator="AND" close=")">
                u.user_name NOT LIKE concat('%', #{item}, '%')
            </foreach>
            OR u.user_name IS NULL
            )
        </if>
        <if test="user.params.userNameNull != null">
            and u.user_name IS NULL
        </if>
        <if test="user.params.userNameNotNull != null">
            and u.user_name IS NOT NULL
        </if>
        <!-- 状态过滤  -->
        <if test="user.params.statusEqual != null and user.params.statusEqual.size() > 0">
            AND u.status IN
            <foreach item="item"
                     collection="user.params.statusEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="user.params.statusNotEqual != null and user.params.statusNotEqual.size() > 0">
            AND u.status NOT IN
            <foreach item="item"
                     collection="user.params.statusNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <!-- 创建时间过滤  -->
        <if test="user.params.createTimeEqual != null and user.params.createTimeEqual.size() > 0">
            AND date_format(u.create_time,'%y%m%d') IN
            <foreach item="item"
                     collection="user.params.createTimeEqual"
                     index="index" open="(" separator="," close=")">
                date_format(#{item},'%y%m%d')
            </foreach>
        </if>
        <if test="user.params.createTimeNotEqual != null and user.params.createTimeNotEqual.size() > 0">
            AND date_format(u.create_time,'%y%m%d') NOT IN
            <foreach item="item"
                     collection="user.params.createTimeNotEqual"
                     index="index" open="(" separator="," close=")">
                date_format(#{item},'%y%m%d')
            </foreach>
        </if>
        <if test="user.params.createTimeBefore != null and user.params.createTimeBefore != ''">
            AND date_format(u.create_time,'%y%m%d') &lt; date_format(#{user.params.createTimeBefore},'%y%m%d')
        </if>
        <if test="user.params.createTimeNotBefore != null and user.params.createTimeNotBefore != ''"><!-- 开始时间检索 -->
            AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{user.params.createTimeNotBefore},'%y%m%d')
        </if>
        <if test="user.params.createTimeAfter != null and user.params.createTimeAfter != ''"><!-- 开始时间检索 -->
            AND date_format(u.create_time,'%y%m%d') &gt; date_format(#{user.params.createTimeAfter},'%y%m%d')
        </if>
        <if test="user.params.createTimeNotAfter != null and user.params.createTimeNotAfter != ''"><!-- 结束时间检索 -->
            AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{user.params.createTimeNotAfter},'%y%m%d')
        </if>
        <if test="user.params.createTimeStart != null and user.params.createTimeStart != ''"><!-- 开始时间检索 -->
            AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{user.params.createTimeStart},'%y%m%d')
        </if>
        <if test="user.params.createTimeEnd != null and user.params.createTimeEnd != ''"><!-- 结束时间检索 -->
            AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{user.params.createTimeEnd},'%y%m%d')
        </if>
        <!-- 数据范围过滤 -->
        ${user.params.dataScope}
        GROUP BY u.user_id
        ORDER BY u.create_time DESC
    </select>

    <select id="selectUserListByUserIds" resultType="net.qixiaowei.system.manage.api.dto.user.UserDTO">
        SELECT
        u.user_id, u.user_type, u.employee_id, u.user_account, u.password, u.user_name, u.mobile_phone, u.email,
        u.avatar, u.remark,
        u.status,
        u.delete_flag, u.create_by, u.create_time, u.update_by, u.update_time,e.employee_name,e.employee_code
        FROM user u
        LEFT JOIN employee e ON e.employee_id=u.employee_id AND e.delete_flag = 0
        WHERE u.delete_flag = 0
        AND u.user_id IN
        <foreach item="item"
                 collection="userIds"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <!--    根据人员查询用户表-->
    <select id="selectUserByEmployeeId" resultType="net.qixiaowei.system.manage.api.dto.user.UserDTO">
        SELECT
        user_id, user_type, employee_id, user_account, password, user_name, mobile_phone, email, avatar, remark, status,
        delete_flag, create_by, create_time, update_by, update_time
        FROM user
        WHERE employee_id=#{employeeId}
        and delete_flag=0
    </select>
    <!--    根据人员id集合批量查询用户表-->
    <select id="selectUserByEmployeeIds" resultType="net.qixiaowei.system.manage.api.dto.user.UserDTO">
        SELECT
        user_id, user_type, employee_id, user_account, password, user_name, mobile_phone, email, avatar, remark, status,
        delete_flag, create_by, create_time, update_by, update_time
        FROM user
        WHERE employee_id in
        <foreach item="item"
                 collection="employeeIds"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
        and delete_flag=0
    </select>

    <!--新增用户表-->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO user
        (user_type,employee_id,user_account,password,user_name,mobile_phone,email,avatar,remark,status,delete_flag,create_by,create_time,update_by,update_time)
        VALUES
        (#{user.userType},#{user.employeeId},#{user.userAccount},#{user.password},#{user.userName},#{user.mobilePhone},#{user.email},#{user.avatar},#{user.remark},#{user.status},#{user.deleteFlag},#{user.createBy},#{user.createTime},#{user.updateBy},#{user.updateTime})
    </insert>
    <!--修改用户表-->
    <update id="updateUser">
        UPDATE user
        SET
        <if test="user.employeeId != null">
            employee_id=#{user.employeeId},
        </if>
        <if test="user.userAccount != null and user.userAccount != ''">
            user_account=#{user.userAccount},
        </if>
        <if test="user.password != null and user.password != ''">
            password=#{user.password},
        </if>
        <if test="user.userName != null and user.userName != ''">
            user_name=#{user.userName},
        </if>
        <if test="user.mobilePhone != null and user.mobilePhone != ''">
            mobile_phone=#{user.mobilePhone},
        </if>
        <if test="user.email != null and user.email != ''">
            email=#{user.email},
        </if>
        <if test="user.avatar != null and user.avatar != ''">
            avatar=#{user.avatar},
        </if>
        <if test="user.remark != null and user.remark != ''">
            remark=#{user.remark},
        </if>
        <if test="user.status != null">
            status=#{user.status},
        </if>
        <if test="user.deleteFlag != null">
            delete_flag=#{user.deleteFlag},
        </if>
        <if test="user.createBy != null">
            create_by=#{user.createBy},
        </if>
        <if test="user.createTime != null">
            create_time=#{user.createTime},
        </if>
        <if test="user.updateBy != null">
            update_by=#{user.updateBy},
        </if>
        <if test="user.updateTime != null">
            update_time=#{user.updateTime}
        </if>
        WHERE
        user_id=#{user.userId}
    </update>
    <!--逻辑删除用户表-->
    <update id="logicDeleteUserByUserId">
        UPDATE user
        SET delete_flag= 1,
        update_by=#{user.updateBy},
        update_time=#{user.updateTime}
        WHERE
        user_id=#{user.userId}
    </update>
    <!--逻辑批量删除用户表-->
    <update id="logicDeleteUserByUserIds">
        UPDATE user
        SET delete_flag= 1,
        update_by=#{updateBy},
        update_time=#{updateTime}
        WHERE
        user_id IN
        <foreach item="item"
                 collection="userIds"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <update id="updateUserStatusByUserIds">
        UPDATE user
        SET
        status=#{status},
        update_by=#{updateBy},
        update_time=#{updateTime}
        WHERE
        user_id IN
        <foreach item="item"
                 collection="userIds"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!--批量新增用户表-->
    <insert id="batchUser">
        INSERT INTO user
        (user_type,employee_id,user_account,password,user_name,mobile_phone,email,avatar,remark,status,delete_flag,create_by,create_time,update_by,update_time)
        VALUES
        <foreach item="item" index="index"
                 collection="users"
                 separator=",">
            (#{item.userType},#{item.employeeId},#{item.userAccount},#{item.password},#{item.userName},#{item.mobilePhone},#{item.email},#{item.avatar},#{item.remark},#{item.status},#{item.deleteFlag},#{item.createBy},#{item.createTime},#{item.updateBy},#{item.updateTime})
        </foreach>
    </insert>

    <select id="selectUserOfAdmin"
            resultType="net.qixiaowei.system.manage.api.dto.user.UserDTO">
        SELECT user_id, user_type, employee_id, user_account, mobile_phone, email
        FROM user
        WHERE user_type = 1 AND delete_flag=0 ORDER BY  create_time ASC LIMIT 1
    </select>

    <!--物理删除用户表-->
    <delete id="deleteUserByUserId">
        DELETE FROM user
        WHERE user_id=#{user}

    </delete>
    <!--物理批量删除用户表-->
    <delete id="deleteUserByUserIds">
        DELETE FROM user
        WHERE user_id IN
        <foreach item="item"
                 collection="userIds"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <!--批量修改用户表-->
    <update id="updateUsers">
        update user
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="employee_id=case" suffix="end,">
                <foreach collection="userList" item="item" index="index">
                    <if test="item.employeeId != null">
                        when user_id=#{item.userId} then #{item.employeeId}
                    </if>
                </foreach>
            </trim>
            <trim prefix="user_account=case" suffix="end,">
                <foreach collection="userList" item="item" index="index">
                    <if test="item.userAccount != null and item.userAccount != ''">
                        when user_id=#{item.userId} then #{item.userAccount}
                    </if>
                </foreach>
            </trim>
            <trim prefix="password=case" suffix="end,">
                <foreach collection="userList" item="item" index="index">
                    <if test="item.password != null and item.password != ''">
                        when user_id=#{item.userId} then #{item.password}
                    </if>
                </foreach>
            </trim>
            <trim prefix="user_name=case" suffix="end,">
                <foreach collection="userList" item="item" index="index">
                    <if test="item.userName != null and item.userName != ''">
                        when user_id=#{item.userId} then #{item.userName}
                    </if>
                </foreach>
            </trim>
            <trim prefix="mobile_phone=case" suffix="end,">
                <foreach collection="userList" item="item" index="index">
                    <if test="item.mobilePhone != null and item.mobilePhone != ''">
                        when user_id=#{item.userId} then #{item.mobilePhone}
                    </if>
                </foreach>
            </trim>
            <trim prefix="email=case" suffix="end,">
                <foreach collection="userList" item="item" index="index">
                    <if test="item.email != null and item.email != ''">
                        when user_id=#{item.userId} then #{item.email}
                    </if>
                </foreach>
            </trim>
            <trim prefix="avatar=case" suffix="end,">
                <foreach collection="userList" item="item" index="index">
                    <if test="item.avatar != null and item.avatar != ''">
                        when user_id=#{item.userId} then #{item.avatar}
                    </if>
                </foreach>
            </trim>
            <trim prefix="remark=case" suffix="end,">
                <foreach collection="userList" item="item" index="index">
                    <if test="item.remark != null and item.remark != ''">
                        when user_id=#{item.userId} then #{item.remark}
                    </if>
                </foreach>
            </trim>
            <trim prefix="status=case" suffix="end,">
                <foreach collection="userList" item="item" index="index">
                    <if test="item.status != null">
                        when user_id=#{item.userId} then #{item.status}
                    </if>
                </foreach>
            </trim>
            <trim prefix="delete_flag=case" suffix="end,">
                <foreach collection="userList" item="item" index="index">
                    <if test="item.deleteFlag != null">
                        when user_id=#{item.userId} then #{item.deleteFlag}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_by=case" suffix="end,">
                <foreach collection="userList" item="item" index="index">
                    <if test="item.createBy != null">
                        when user_id=#{item.userId} then #{item.createBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_time=case" suffix="end,">
                <foreach collection="userList" item="item" index="index">
                    <if test="item.createTime != null">
                        when user_id=#{item.userId} then #{item.createTime}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_by=case" suffix="end,">
                <foreach collection="userList" item="item" index="index">
                    <if test="item.updateBy != null">
                        when user_id=#{item.userId} then #{item.updateBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_time=case" suffix="end,">
                <foreach collection="userList" item="item" index="index">
                    <if test="item.updateTime != null">
                        when user_id=#{item.userId} then #{item.updateTime}
                    </if>
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="userList" separator="or" item="item" index="index">
            user_id=#{item.userId}
        </foreach>
    </update>
</mapper>


