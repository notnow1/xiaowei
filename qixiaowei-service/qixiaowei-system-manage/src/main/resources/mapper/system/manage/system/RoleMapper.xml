<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.qixiaowei.system.manage.mapper.system.RoleMapper">
    <!--    查询角色表-->
    <select id="selectRoleByRoleId"
            resultType="net.qixiaowei.system.manage.api.dto.system.RoleDTO">
        SELECT
        role_id,role_type,role_code,role_name,data_scope,product_package,sort,remark,status,delete_flag,create_by,create_time,update_by,update_time
        FROM role
        WHERE role_id=#{roleId}
        and delete_flag=0
    </select>

    <select id="selectRoleIdOfAdmin"
            resultType="java.lang.Long">
        SELECT role_id FROM role WHERE role_type = 0 AND remark = 'admin' AND delete_flag=0 ORDER BY  create_time ASC LIMIT 1
    </select>

    <select id="selectRoleByRoleCodeOrName"
            resultType="net.qixiaowei.system.manage.api.dto.system.RoleDTO">
        SELECT
        role_id,role_type, role_code, role_name, data_scope, product_package, sort, remark, status, delete_flag,
        create_by,
        create_time, update_by, update_time
        FROM role
        WHERE ( BINARY role_code = #{roleCode} OR role_name= #{roleName} )
        and delete_flag = 0
    </select>

    <select id="selectRolesByUserId" resultType="net.qixiaowei.system.manage.api.dto.system.RoleDTO">
        SELECT distinct
        r.role_id,r.role_type, r.role_code, r.role_name, r.data_scope, r.product_package, r.sort, r.remark, r.status,
        r.delete_flag,
        r.create_by, r.create_time, r.update_by, r.update_time
        FROM role r
        LEFT JOIN user_role ur on ur.role_id = r.role_id AND ur.delete_flag = 0
        LEFT JOIN user u on u.user_id = ur.user_id AND u.delete_flag = 0
        WHERE r.delete_flag=0 and ur.user_id = #{userId}
    </select>

    <!--    查询角色表列表-->
    <select id="selectRoleList" resultType="net.qixiaowei.system.manage.api.dto.system.RoleDTO">
        SELECT DISTINCT
        r.role_id,r.role_type,r.role_code,r.role_name,r.data_scope,r.product_package,r.sort,r.remark,r.status,r.delete_flag,r.create_by,r.create_time,r.update_by,r.update_time
        FROM role r
        LEFT JOIN user_role ur on ur.role_id = r.role_id
        LEFT JOIN user u on u.user_id = ur.user_id
        WHERE r.delete_flag=0
        <if test="role.roleId != null">
            and r.role_id=#{role.roleId}
        </if>
        <if test="role.roleType != null">
            and r.role_type=#{role.roleType}
        </if>
        <if test="role.roleCode != null and role.roleCode != ''">
            and r.role_code LIKE concat('%', #{role.roleCode}, '%')
        </if>
        <if test="role.roleName != null and role.roleName != ''">
            and r.role_name LIKE concat('%', #{role.roleName}, '%')
        </if>
        <if test="role.dataScope != null">
            and r.data_scope=#{role.dataScope}
        </if>
        <if test="role.productPackage != null and role.productPackage != ''">
            and r.product_package LIKE concat('%', #{role.productPackage}, '%')
        </if>
        <if test="role.sort != null">
            and r.sort=#{role.sort}
        </if>
        <if test="role.remark != null and role.remark != ''">
            and r.remark=#{role.remark}
        </if>
        <if test="role.status != null">
            and r.status=#{role.status}
        </if>
        <if test="role.deleteFlag != null">
            and r.delete_flag=#{role.deleteFlag}
        </if>
        <if test="role.createBy != null">
            and r.create_by=#{role.createBy}
        </if>
        <if test="role.createTime != null">
            and r.create_time=#{role.createTime}
        </if>
        <if test="role.updateBy != null">
            and r.update_by=#{role.updateBy}
        </if>
        <if test="role.updateTime != null">
            and r.update_time=#{role.updateTime}
        </if>
        <!-- 数据范围过滤 -->
        ${role.params.dataScope}
        ORDER BY r.sort ASC,r.create_time DESC
    </select>


    <select id="getRoleCodes" resultType="java.lang.String">
        SELECT role_code FROM role WHERE delete_flag=0 AND role_code LIKE CONCAT(#{prefixCodeRule},'%') ORDER BY
        role_code ASC
    </select>

    <select id="selectRolesByRoleIds" resultType="net.qixiaowei.system.manage.api.dto.system.RoleDTO">
        SELECT
        role_id,role_type, role_code, role_name, data_scope, product_package, sort, remark, status, delete_flag,
        create_by,
        create_time, update_by, update_time
        FROM role
        WHERE delete_flag=0 AND
        role_id IN
        <foreach item="item"
                 collection="roleIds"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!--新增角色表-->
    <insert id="insertRole" useGeneratedKeys="true" keyProperty="roleId">
        INSERT INTO role
        (role_type,role_code,role_name,data_scope,product_package,sort,remark,status,delete_flag,create_by,create_time,update_by,update_time)
        VALUES
        (#{role.roleType},#{role.roleCode},#{role.roleName},#{role.dataScope},#{role.productPackage},#{role.sort},#{role.remark},#{role.status},#{role.deleteFlag},#{role.createBy},#{role.createTime},#{role.updateBy},#{role.updateTime})
    </insert>

    <!--修改角色表-->
    <update id="updateRole">
        UPDATE role
        SET
        <if test="role.roleCode != null and role.roleCode != ''">
            role_code=#{role.roleCode},
        </if>
        <if test="role.roleName != null and role.roleName != ''">
            role_name=#{role.roleName},
        </if>
        <if test="role.dataScope != null">
            data_scope=#{role.dataScope},
        </if>
        <if test="role.productPackage != null and role.productPackage != ''">
            product_package=#{role.productPackage},
        </if>
        <if test="role.sort != null">
            sort=#{role.sort},
        </if>
        <if test="role.remark != null and role.remark != ''">
            remark=#{role.remark},
        </if>
        <if test="role.status != null">
            status=#{role.status},
        </if>
        <if test="role.deleteFlag != null">
            delete_flag=#{role.deleteFlag},
        </if>
        <if test="role.createBy != null">
            create_by=#{role.createBy},
        </if>
        <if test="role.createTime != null">
            create_time=#{role.createTime},
        </if>
        <if test="role.updateBy != null">
            update_by=#{role.updateBy},
        </if>
        <if test="role.updateTime != null">
            update_time=#{role.updateTime}
        </if>
        WHERE
        role_id=#{role.roleId}
    </update>

    <!--逻辑删除角色表-->
    <update id="logicDeleteRoleByRoleId">
        UPDATE role
        SET delete_flag= 1,
        update_by=#{updateBy},
        update_time=#{updateTime}
        WHERE
        role_id=#{roleId}
    </update>

    <!--逻辑批量删除角色表-->
    <update id="logicDeleteRoleByRoleIds">
        UPDATE role
        SET delete_flag= 1,
        update_by=#{updateBy},
        update_time=#{updateTime}
        WHERE
        role_id IN
        <foreach item="item"
                 collection="roleIds"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!--批量新增角色表-->
    <insert id="batchRole" useGeneratedKeys="true" keyProperty="roleId">
        INSERT INTO role
        (role_type,role_code,role_name,data_scope,product_package,sort,remark,status,delete_flag,create_by,create_time,update_by,update_time)
        VALUES
        <foreach item="item" index="index"
                 collection="roles"
                 separator=",">
            (#{item.roleType},#{item.roleCode},#{item.roleName},#{item.dataScope},#{item.productPackage},#{item.sort},#{item.remark},#{item.status},#{item.deleteFlag},#{item.createBy},#{item.createTime},#{item.updateBy},#{item.updateTime})
        </foreach>
    </insert>

    <!--物理删除角色表-->
    <delete id="deleteRoleByRoleId">
        DELETE FROM role
        WHERE role_id=#{role}

    </delete>

    <!--物理批量删除角色表-->
    <delete id="deleteRoleByRoleIds">
        DELETE FROM role
        WHERE role_id IN
        <foreach item="item"
                 collection="roleIds"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!--批量修改角色表-->
    <update id="updateRoles">
        update role
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="role_code=case" suffix="end,">
                <foreach collection="roleList" item="item" index="index">
                    <if test="item.roleCode != null and item.roleCode != ''">
                        when role_id=#{item.roleId} then #{item.roleCode}
                    </if>
                </foreach>
            </trim>
            <trim prefix="role_name=case" suffix="end,">
                <foreach collection="roleList" item="item" index="index">
                    <if test="item.roleName != null and item.roleName != ''">
                        when role_id=#{item.roleId} then #{item.roleName}
                    </if>
                </foreach>
            </trim>
            <trim prefix="data_scope=case" suffix="end,">
                <foreach collection="roleList" item="item" index="index">
                    <if test="item.dataScope != null">
                        when role_id=#{item.roleId} then #{item.dataScope}
                    </if>
                </foreach>
            </trim>
            <trim prefix="product_package=case" suffix="end,">
                <foreach collection="roleList" item="item" index="index">
                    <if test="item.productPackage != null and item.productPackage != ''">
                        when role_id=#{item.roleId} then #{item.productPackage}
                    </if>
                </foreach>
            </trim>
            <trim prefix="sort=case" suffix="end,">
                <foreach collection="roleList" item="item" index="index">
                    <if test="item.sort != null">
                        when role_id=#{item.roleId} then #{item.sort}
                    </if>
                </foreach>
            </trim>
            <trim prefix="remark=case" suffix="end,">
                <foreach collection="roleList" item="item" index="index">
                    <if test="item.remark != null and item.remark != ''">
                        when role_id=#{item.roleId} then #{item.remark}
                    </if>
                </foreach>
            </trim>
            <trim prefix="status=case" suffix="end,">
                <foreach collection="roleList" item="item" index="index">
                    <if test="item.status != null">
                        when role_id=#{item.roleId} then #{item.status}
                    </if>
                </foreach>
            </trim>
            <trim prefix="delete_flag=case" suffix="end,">
                <foreach collection="roleList" item="item" index="index">
                    <if test="item.deleteFlag != null">
                        when role_id=#{item.roleId} then #{item.deleteFlag}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_by=case" suffix="end,">
                <foreach collection="roleList" item="item" index="index">
                    <if test="item.createBy != null">
                        when role_id=#{item.roleId} then #{item.createBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_time=case" suffix="end,">
                <foreach collection="roleList" item="item" index="index">
                    <if test="item.createTime != null">
                        when role_id=#{item.roleId} then #{item.createTime}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_by=case" suffix="end,">
                <foreach collection="roleList" item="item" index="index">
                    <if test="item.updateBy != null">
                        when role_id=#{item.roleId} then #{item.updateBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_time=case" suffix="end,">
                <foreach collection="roleList" item="item" index="index">
                    <if test="item.updateTime != null">
                        when role_id=#{item.roleId} then #{item.updateTime}
                    </if>
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="roleList" separator="or" item="item" index="index">
            role_id=#{item.roleId}
        </foreach>
    </update>
</mapper>


