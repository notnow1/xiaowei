<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.qixiaowei.operate.cloud.mapper.product.ProductMapper">
    <!--    查询产品表-->
    <select id="selectProductByProductId"
            resultType="net.qixiaowei.operate.cloud.api.dto.product.ProductDTO">
        SELECT
            p.product_id,
            p.parent_product_id,
            (SELECT p2.product_name FROM product p2 WHERE p2.product_id = p.parent_product_id and p2.delete_flag = 0) AS parentProductName,
            pu.product_unit_name,
            p.ancestors,
            p.product_code,
            p.product_name,
            p.level,
            p.product_unit_id,
            p.product_category,
            p.product_description,
            p.list_price,
            p.listing_flag,
            p.delete_flag,
            p.create_by,
            p.create_time,
            p.update_by,
            p.update_time
        FROM
            product p
                left join product_unit pu
                          on
                                      pu.product_unit_id = p.product_unit_id
                                  and pu.delete_flag = 0
        WHERE
                p.product_id =
                #{productId}
          and p.delete_flag = 0
    </select>

    <!--    查询产品表列表-->
    <select id="selectProductList" resultType="net.qixiaowei.operate.cloud.api.dto.product.ProductDTO">
        SELECT
        pu.product_unit_name,
        p.product_id,
        p.parent_product_id,
        p.ancestors,
        p.product_code,
        p.product_name,
        p2.product_name as parentProductName,
        p.level,
        p.product_unit_id,
        p.product_category,
        p.product_description,
        p.list_price,
        p.listing_flag,
        p.delete_flag,
        p.create_by,
        p.create_time,
        p.update_by,
        p.update_time
        FROM
        product p
        left join
        product_unit pu
        on p.product_unit_id =pu.product_unit_id
        and pu.delete_flag= 0
        left join
        product p2
        on p.parent_product_id =p2.product_id
        and p2.delete_flag= 0
        WHERE
        p.delete_flag = 0

        <!-- 产品编码过滤  -->
        <if test="product.params.productCodeEqual != null and product.params.productCodeEqual.size() > 0">
            AND p.product_code IN
            <foreach item="item"
                     collection="product.params.productCodeEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="product.params.productCodeNotEqual != null and product.params.productCodeNotEqual.size() > 0">
            AND (p.product_code NOT IN
            <foreach item="item"
                     collection="product.params.productCodeNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR p.product_code IS NULL
            )
        </if>
        <if test="product.params.productCodeLike != null and product.params.productCodeLike.size() > 0">
            AND
            <foreach item="item"
                     collection="product.params.productCodeLike"
                     index="index" open="(" separator="AND" close=")">
                p.product_code  LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <if test="product.params.productCodeNotLike != null and product.params.productCodeNotLike.size() > 0">
            AND
            <foreach item="item"
                     collection="product.params.productCodeNotLike"
                     index="index" open="(" separator="AND" close=")">
                p.product_code  NOT LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <!-- 产品名称过滤  -->
        <if test="product.params.productNameEqual != null and product.params.productNameEqual.size() > 0">
            AND p.product_name IN
            <foreach item="item"
                     collection="product.params.productNameEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="product.params.productNameNotEqual != null and product.params.productNameNotEqual.size() > 0">
            AND (p.product_name NOT IN
            <foreach item="item"
                     collection="product.params.productNameNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR p.product_name IS NULL
            )
        </if>
        <if test="product.params.productNameLike != null and product.params.productNameLike.size() > 0">
            AND
            <foreach item="item"
                     collection="product.params.productNameLike"
                     index="index" open="(" separator="AND" close=")">
                p.product_name  LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <if test="product.params.productNameNotLike != null and product.params.productNameNotLike.size() > 0">
            AND
            <foreach item="item"
                     collection="product.params.productNameNotLike"
                     index="index" open="(" separator="AND" close=")">
                p.product_name  NOT LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <!-- 上级产品名称过滤  -->
        <if test="product.params.parentProductNameEqual != null and product.params.parentProductNameEqual.size() > 0">
            AND p2.product_name IN
            <foreach item="item"
                     collection="product.params.parentProductNameEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="product.params.parentProductNameNotEqual != null and product.params.parentProductNameNotEqual.size() > 0">
            AND (p2.product_name NOT IN
            <foreach item="item"
                     collection="product.params.parentProductNameNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR p2.product_name IS NULL
            )
        </if>
        <if test="product.params.parentProductNameNull != null">
            AND p.parent_product_id = 0
        </if>
        <if test="product.params.parentProductNameNotNull != null">
            AND p.parent_product_id != 0
        </if>
        <!-- 产品层级过滤  -->
        <if test="product.params.levelEqual != null and product.params.levelEqual.size() > 0">
            AND p.level IN
            <foreach item="item"
                     collection="product.params.levelEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="product.params.levelNotEqual != null and product.params.levelNotEqual.size() > 0">
            AND p.level NOT IN
            <foreach item="item"
                     collection="product.params.levelNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="product.params.levelGreaterThan != null ">
            AND p.level &gt;#{product.params.levelGreaterThan}
        </if>
        <if test="product.params.levelNotGreaterThan != null ">
            AND p.level &lt;=#{product.params.levelNotGreaterThan}
        </if>
        <if test="product.params.levelLessThan != null ">
            AND p.level &lt;#{product.params.levelLessThan}
        </if>
        <if test="product.params.levelNotLessThan != null ">
            AND p.level &gt;=#{product.params.levelNotLessThan}
        </if>
        <!-- 产品量纲名称过滤  -->
        <if test="product.params.productUnitNameEqual != null and product.params.productUnitNameEqual.size() > 0">
            AND pu.product_unit_name IN
            <foreach item="item"
                     collection="product.params.productUnitNameEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="product.params.productUnitNameNotEqual != null and product.params.productUnitNameNotEqual.size() > 0">
            AND (pu.product_unit_name NOT IN
            <foreach item="item"
                     collection="product.params.productUnitNameNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR pu.product_unit_name IS NULL
            )
        </if>
        <if test="product.params.productUnitNameLike != null and product.params.productUnitNameLike.size() > 0">
            AND
            <foreach item="item"
                     collection="product.params.productUnitNameLike"
                     index="index" open="(" separator="AND" close=")">
                pu.product_unit_name  LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <if test="product.params.productUnitNameNotLike != null and product.params.productUnitNameNotLike.size() > 0">
            AND
            <foreach item="item"
                     collection="product.params.productUnitNameNotLike"
                     index="index" open="(" separator="AND" close=")">
                pu.product_unit_name  NOT LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <!-- 产品类别过滤  -->
        <if test="product.params.dictionaryLabelEqual != null  ">
            <!-- 产品类别过滤  -->
            <if test="product.params.dictionaryDataIds != null and product.params.dictionaryDataIds.size() > 0">
                AND p.product_category IN
                <foreach item="item"
                         collection="product.params.dictionaryDataIds"
                         index="index" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </if>
        <!-- 产品类别过滤  -->
        <if test="product.params.dictionaryLabelNotEqual != null">
            <!-- 产品类别过滤  -->
            <if test="product.params.dictionaryDataIds != null and product.params.dictionaryDataIds.size() > 0">
                AND (p.product_category IN
                <foreach item="item"
                         collection="product.params.dictionaryDataIds"
                         index="index" open="(" separator="," close=")">
                    #{item}
                </foreach> or (p.product_category ='' or p.product_category is null))
            </if>
        </if>
        <!-- 产品状态过滤  -->
        <if test="product.params.listingFlagEqual != null and product.params.listingFlagEqual.size() > 0">
            AND p.listing_flag IN
            <foreach item="item"
                     collection="product.params.listingFlagEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="product.params.listingFlagNotEqual != null and product.params.listingFlagNotEqual.size() > 0">
            AND (p.listing_flag NOT IN
            <foreach item="item"
                     collection="product.params.listingFlagNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR p.listing_flag IS NULL
            )
        </if>
        <if test="product.productUnitName != null">
            and pu.product_unit_name =#{product.productUnitName}
        </if>
        <if test="product.productId != null">
            and p.product_id like '%${product.productId}%'
        </if>
        <if test="product.parentProductId != null">
            and p.parent_product_id like '%${product.parentProductId}%'
        </if>
        <if test="product.ancestors != null and product.ancestors != ''">
            and p.ancestors like '%${product.ancestors}%'
        </if>
        <if test="product.productCode != null and product.productCode != ''">
            and p.product_code like '%${product.productCode}%'
        </if>
        <if test="product.productName != null and product.productName != ''">
            and p.product_name like '%${product.productName}%'
        </if>
        <if test="product.level != null">
            and p.level like '%${product.level}%'
        </if>
        <if test="product.productUnitId != null">
            and p.product_unit_id like '%${product.productUnitId}%'
        </if>
        <if test="product.productCategory != null and product.productCategory != ''">
            and p.product_category = #{product.productCategory}
        </if>
        <if test="product.productDescription != null and product.productDescription != ''">
            and p.product_description like '%${product.productDescription}%'
        </if>
        <if test="product.listPrice != null">
            and p.list_price like '%${product.listPrice}%'
        </if>
        <if test="product.listingFlag != null">
            and p.listing_flag =#{product.listingFlag}
        </if>
    </select>

    <select id="getProductCodes" resultType="java.lang.String">
        SELECT product_code FROM product WHERE delete_flag=0 AND product_code LIKE CONCAT(#{prefixCodeRule},'%') ORDER BY product_code ASC
    </select>

    <!--    根据产品编码查询产品表-->
    <select id="selectProductByProductCode"
            resultType="net.qixiaowei.operate.cloud.api.dto.product.ProductDTO">
        SELECT
            product_id, parent_product_id, ancestors, product_code, product_name, level, product_unit_id, product_category,
            product_description, list_price, listing_flag, delete_flag, create_by, create_time, update_by, update_time
        FROM product
        WHERE product_code=#{productCode}
          and delete_flag=0
    </select>
    <select id="selectProductByParentProductId"
            resultType="net.qixiaowei.operate.cloud.api.dto.product.ProductDTO">
        SELECT
            product_id, parent_product_id, ancestors, product_code, product_name, level, product_unit_id, product_category,
            product_description, list_price, listing_flag, delete_flag, create_by, create_time, update_by, update_time
        FROM product
        WHERE parent_product_id=#{parentProductId}
          and delete_flag=0
    </select>
    <!--    根据产品单位ID查询产品表-->
    <select id="selectProductByProductUnitId"
            resultType="net.qixiaowei.operate.cloud.api.dto.product.ProductDTO">
        SELECT
            product_id, parent_product_id, ancestors, product_code, product_name, level, product_unit_id, product_category,
            product_description, list_price, listing_flag, delete_flag, create_by, create_time, update_by, update_time
        FROM product
        WHERE product_unit_id=#{productUnitId}
          and delete_flag=0
    </select>
    <!--    根据产品单位ID批量查询产品表-->
    <select id="selectProductByProductUnitIds"
            resultType="net.qixiaowei.operate.cloud.api.dto.product.ProductDTO">
        SELECT
        product_id, parent_product_id, ancestors, product_code, product_name, level, product_unit_id, product_category,
        product_description, list_price, listing_flag, delete_flag, create_by, create_time, update_by, update_time
        FROM product
        WHERE product_unit_id in
        <foreach item="item"
                 collection="productUnitIds"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
        and delete_flag=0
    </select>
    <!--    查询产品是否用到枚举-->
    <select id="queryProductQuote" resultType="net.qixiaowei.operate.cloud.api.dto.product.ProductDTO">
        SELECT
            product_id, parent_product_id, ancestors, product_code, product_name, level, product_unit_id, product_category,
            product_description, list_price, listing_flag, delete_flag, create_by, create_time, update_by, update_time
        FROM product
        WHERE product_description=#{product.productCategory}
           or listing_flag = #{product.listingFlag}
            and delete_flag=0
    </select>
    <!--    返回产品层级-->
    <select id="selectLevel" resultType="java.lang.Integer">
        SELECT
            level
        FROM product
        WHERE delete_flag=0
        group by level
    </select>
    <!--    根据产品IDS返回列表-->
    <select id="selectProductListByProductIds"
            resultType="net.qixiaowei.operate.cloud.api.dto.product.ProductDTO">
        SELECT
        product_id, parent_product_id, ancestors, product_code, product_name, level, product_unit_id, product_category,
        product_description, list_price, listing_flag, delete_flag, create_by, create_time, update_by, update_time
        FROM product
        WHERE delete_flag=0
        AND product_id
        IN
        <foreach collection="productIds" separator="," open="(" close=")" item="item" index="index">
            #{item}
        </foreach>
    </select>
    <!--    产品是否被引用-->
    <select id="selectProductQuote" resultType="net.qixiaowei.operate.cloud.api.dto.product.ProductDTO">
        SELECT  p.product_id,
                td.indicator_id ,
                p.parent_product_id,
                p.ancestors,
                p.product_code,
                p.product_name,
                p.`level`,
                p.product_unit_id,
                p.product_category,
                p.product_description,
                p.list_price,
                p.listing_flag,
                p.delete_flag,
                p.create_by,
                p.create_time,
                p.update_by,
                p.update_time
        FROM product p
                 left join target_decompose_details tdd
                           on p.product_id = tdd.product_id
                               and tdd.delete_flag = 0
                 left join target_decompose td
                           on td.target_decompose_id = tdd.target_decompose_id
                               and td.delete_flag = 0
        where p.product_id = #{productId}
          and p.delete_flag = 0
    </select>
    <!--    根据产品code集合查询产品数据-->
    <select id="selectProductByProductCodes"
            resultType="net.qixiaowei.operate.cloud.api.dto.product.ProductDTO">
        SELECT  p.product_id,
        p.parent_product_id,
        p.ancestors,
        p.product_code,
        p.product_name,
        p.`level`,
        p.product_unit_id,
        p.product_category,
        p.product_description,
        p.list_price,
        p.listing_flag,
        p.delete_flag,
        p.create_by,
        p.create_time,
        p.update_by,
        p.update_time
        FROM product p
        where p.product_code in
        <foreach item="item"
                 collection="productCodes"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
        and p.delete_flag = 0
    </select>
<!--    根据id查询所有子级数据-->
    <select id="selectAncestors" resultType="net.qixiaowei.operate.cloud.api.dto.product.ProductDTO">
        SELECT
        product_id,
        parent_product_id,
        ancestors,
        product_code,
        product_name,
        `level`,
        product_unit_id,
        product_category,
        product_description,
        list_price,
        listing_flag,
        delete_flag,
        create_by,
        create_time,
        update_by,
        update_time,
        tenant_id
        FROM (
        select
        product_id,
        parent_product_id,
        ancestors,
        product_code,
        product_name,
        `level`,
        product_unit_id,
        product_category,
        product_description,
        list_price,
        listing_flag,
        delete_flag,
        create_by,
        create_time,
        update_by,
        update_time,
        tenant_id
        from
        product
        WHERE
        delete_flag=0
        <if test="productId != null">
            and product_id=#{productId}
        </if>
        union
        select
        product_id,
        parent_product_id,
        ancestors,
        product_code,
        product_name,
        `level`,
        product_unit_id,
        product_category,
        product_description,
        list_price,
        listing_flag,
        delete_flag,
        create_by,
        create_time,
        update_by,
        update_time,
        tenant_id
        from
        product
        WHERE
        delete_flag=0
        <if test="productId != null">
            and find_in_set(#{productId}, ancestors)
        </if>
        and delete_flag = 0
        ) AS ancestors
    </select>
    <!--新增产品表-->
    <insert id="insertProduct" useGeneratedKeys="true" keyProperty="productId">
        INSERT INTO product
        (parent_product_id,ancestors,product_code,product_name,level,product_unit_id,product_category,product_description,list_price,listing_flag,delete_flag,create_by,create_time,update_by,update_time)
        VALUES
            (#{product.parentProductId},#{product.ancestors},#{product.productCode},#{product.productName},#{product.level},#{product.productUnitId},#{product.productCategory},#{product.productDescription},#{product.listPrice},#{product.listingFlag},#{product.deleteFlag},#{product.createBy},#{product.createTime},#{product.updateBy},#{product.updateTime})
    </insert>
    <!--修改产品表-->
    <update id="updateProduct">
        UPDATE product
        SET
        <if test="product.parentProductId != null">
            parent_product_id=#{product.parentProductId},
        </if>
        <if test="product.ancestors != null and product.ancestors != ''">
            ancestors=#{product.ancestors},
        </if>
        <if test="product.productCode != null and product.productCode != ''">
            product_code=#{product.productCode},
        </if>
        <if test="product.productName != null and product.productName != ''">
            product_name=#{product.productName},
        </if>
        <if test="product.level != null">
            level=#{product.level},
        </if>
        <if test="product.productUnitId != null">
            product_unit_id=#{product.productUnitId},
        </if>
        <if test="product.productCategory != null and product.productCategory != ''">
            product_category=#{product.productCategory},
        </if>
        <if test="product.productDescription != null and product.productDescription != ''">
            product_description=#{product.productDescription},
        </if>
        <if test="product.listPrice != null">
            list_price=#{product.listPrice},
        </if>
        <if test="product.listingFlag != null">
            listing_flag=#{product.listingFlag},
        </if>
        <if test="product.deleteFlag != null">
            delete_flag=#{product.deleteFlag},
        </if>
        <if test="product.createBy != null">
            create_by=#{product.createBy},
        </if>
        <if test="product.createTime != null">
            create_time=#{product.createTime},
        </if>
        <if test="product.updateBy != null">
            update_by=#{product.updateBy},
        </if>
        <if test="product.updateTime != null">
            update_time=#{product.updateTime}
        </if>
        WHERE
        product_id=#{product.productId}
    </update>
    <!--逻辑删除产品表-->
    <update id="logicDeleteProductByProductId">
        UPDATE product
        SET delete_flag= 1,
            update_by=#{updateBy},
            update_time=#{updateTime}
        WHERE
            product_id=#{product.productId}
    </update>
    <!--逻辑批量删除产品表-->
    <update id="logicDeleteProductByProductIds">
        UPDATE product
        SET delete_flag= 1,
        update_by=#{updateBy},
        update_time=#{updateTime}
        WHERE
        product_id IN
        <foreach item="item"
                 collection="productIds"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <!--批量新增产品表-->
    <insert id="batchProduct">
        INSERT INTO product
        (parent_product_id,ancestors,product_code,product_name,level,product_unit_id,product_category,product_description,list_price,listing_flag,delete_flag,create_by,create_time,update_by,update_time)
        VALUES
        <foreach item="item" index="index"
                 collection="products"
                 separator=",">
            (#{item.parentProductId},#{item.ancestors},#{item.productCode},#{item.productName},#{item.level},#{item.productUnitId},#{item.productCategory},#{item.productDescription},#{item.listPrice},#{item.listingFlag},#{item.deleteFlag},#{item.createBy},#{item.createTime},#{item.updateBy},#{item.updateTime})
        </foreach>
    </insert>

    <!--物理删除产品表-->
    <delete id="deleteProductByProductId">
        DELETE FROM product
        WHERE product_id=#{product}

    </delete>
    <!--物理批量删除产品表-->
    <delete id="deleteProductByProductIds">
        DELETE FROM product
        WHERE product_id IN
        <foreach item="item"
                 collection="productIds"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <!--批量修改产品表-->
    <update id="updateProducts">
        update product
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="parent_product_id=case" suffix="end,">
                <foreach collection="productList" item="item" index="index">
                    <if test="item.parentProductId != null">
                        when product_id=#{item.productId} then #{item.parentProductId}
                    </if>
                </foreach>
            </trim>
            <trim prefix="ancestors=case" suffix="end,">
                <foreach collection="productList" item="item" index="index">
                    <if test="item.ancestors != null and item.ancestors != ''">
                        when product_id=#{item.productId} then #{item.ancestors}
                    </if>
                </foreach>
            </trim>
            <trim prefix="product_code=case" suffix="end,">
                <foreach collection="productList" item="item" index="index">
                    <if test="item.productCode != null and item.productCode != ''">
                        when product_id=#{item.productId} then #{item.productCode}
                    </if>
                </foreach>
            </trim>
            <trim prefix="product_name=case" suffix="end,">
                <foreach collection="productList" item="item" index="index">
                    <if test="item.productName != null and item.productName != ''">
                        when product_id=#{item.productId} then #{item.productName}
                    </if>
                </foreach>
            </trim>
            <trim prefix="level=case" suffix="end,">
                <foreach collection="productList" item="item" index="index">
                    <if test="item.level != null">
                        when product_id=#{item.productId} then #{item.level}
                    </if>
                </foreach>
            </trim>
            <trim prefix="product_unit_id=case" suffix="end,">
                <foreach collection="productList" item="item" index="index">
                    <if test="item.productUnitId != null">
                        when product_id=#{item.productId} then #{item.productUnitId}
                    </if>
                </foreach>
            </trim>
            <trim prefix="product_category=case" suffix="end,">
                <foreach collection="productList" item="item" index="index">
                    <if test="item.productCategory != null and item.productCategory != ''">
                        when product_id=#{item.productId} then #{item.productCategory}
                    </if>
                </foreach>
            </trim>
            <trim prefix="product_description=case" suffix="end,">
                <foreach collection="productList" item="item" index="index">
                    <if test="item.productDescription != null and item.productDescription != ''">
                        when product_id=#{item.productId} then #{item.productDescription}
                    </if>
                </foreach>
            </trim>
            <trim prefix="list_price=case" suffix="end,">
                <foreach collection="productList" item="item" index="index">
                    <if test="item.listPrice != null">
                        when product_id=#{item.productId} then #{item.listPrice}
                    </if>
                </foreach>
            </trim>
            <trim prefix="listing_flag=case" suffix="end,">
                <foreach collection="productList" item="item" index="index">
                    <if test="item.listingFlag != null">
                        when product_id=#{item.productId} then #{item.listingFlag}
                    </if>
                </foreach>
            </trim>
            <trim prefix="delete_flag=case" suffix="end,">
                <foreach collection="productList" item="item" index="index">
                    <if test="item.deleteFlag != null">
                        when product_id=#{item.productId} then #{item.deleteFlag}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_by=case" suffix="end,">
                <foreach collection="productList" item="item" index="index">
                    <if test="item.createBy != null">
                        when product_id=#{item.productId} then #{item.createBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_time=case" suffix="end,">
                <foreach collection="productList" item="item" index="index">
                    <if test="item.createTime != null">
                        when product_id=#{item.productId} then #{item.createTime}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_by=case" suffix="end,">
                <foreach collection="productList" item="item" index="index">
                    <if test="item.updateBy != null">
                        when product_id=#{item.productId} then #{item.updateBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_time=case" suffix="end,">
                <foreach collection="productList" item="item" index="index">
                    <if test="item.updateTime != null">
                        when product_id=#{item.productId} then #{item.updateTime}
                    </if>
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="productList" separator="or" item="item" index="index">
            product_id=#{item.productId}
        </foreach>
    </update>
</mapper>


