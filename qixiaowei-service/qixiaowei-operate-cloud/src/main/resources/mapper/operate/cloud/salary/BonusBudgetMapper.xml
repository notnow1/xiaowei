<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.qixiaowei.operate.cloud.mapper.salary.BonusBudgetMapper">
    <!--    查询奖金预算表-->
    <select id="selectBonusBudgetByBonusBudgetId"
            resultType="net.qixiaowei.operate.cloud.api.dto.salary.BonusBudgetDTO">
        SELECT
        bonus_budget_id, budget_year, amount_bonus_budget, bonus_before_one, delete_flag, create_by, create_time, update_by, update_time
        FROM bonus_budget
        WHERE  bonus_budget_id=#{bonusBudgetId}
        and delete_flag=0
    </select>

    <!--    批量查询奖金预算表-->
    <select id="selectBonusBudgetByBonusBudgetIds"
            resultType="net.qixiaowei.operate.cloud.api.dto.salary.BonusBudgetDTO">
        SELECT
        bonus_budget_id, budget_year, amount_bonus_budget, bonus_before_one, delete_flag, create_by, create_time, update_by, update_time
        FROM bonus_budget
        WHERE  bonus_budget_id in
            <foreach item="item"
                     collection="bonusBudgetIds"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        and delete_flag=0
    </select>

    <!--    查询奖金预算表列表-->
    <select id="selectBonusBudgetList" resultType="net.qixiaowei.operate.cloud.api.dto.salary.BonusBudgetDTO">
        SELECT
        bonus_budget_id, budget_year, amount_bonus_budget, bonus_before_one, delete_flag, create_by, create_time, update_by, update_time
        FROM bonus_budget
        WHERE delete_flag=0
                <if test="bonusBudget.bonusBudgetId != null">
                    and bonus_budget_id=#{bonusBudget.bonusBudgetId}
                </if>
                <if test="bonusBudget.budgetYear != null">
                    and budget_year=#{bonusBudget.budgetYear}
                </if>
                <if test="bonusBudget.amountBonusBudget != null">
                    and amount_bonus_budget=#{bonusBudget.amountBonusBudget}
                </if>
                <if test="bonusBudget.bonusBeforeOne != null">
                    and bonus_before_one=#{bonusBudget.bonusBeforeOne}
                </if>
                <if test="bonusBudget.deleteFlag != null">
                    and delete_flag=#{bonusBudget.deleteFlag}
                </if>
                <if test="bonusBudget.createBy != null">
                    and create_by=#{bonusBudget.createBy}
                </if>
                <if test="bonusBudget.createTime != null">
                    and create_time=#{bonusBudget.createTime}
                </if>
                <if test="bonusBudget.updateBy != null">
                    and update_by=#{bonusBudget.updateBy}
                </if>
                <if test="bonusBudget.updateTime != null">
                    and update_time=#{bonusBudget.updateTime}
                </if>
    </select>
<!--    返回最大年份-->
    <select id="queryBonusBudgetYear" resultType="java.lang.Integer">
        SELECT
            case when max(budget_year) is null then
                     IFNULL(max(budget_year),YEAR(NOW())+1)
                 else max(budget_year)+1 end as budget_year
        FROM bonus_budget
        WHERE  delete_flag = 0
    </select>
    <!--新增奖金预算表-->
    <insert id="insertBonusBudget" useGeneratedKeys="true" keyProperty="bonusBudgetId">
        INSERT INTO bonus_budget (budget_year,amount_bonus_budget,bonus_before_one,delete_flag,create_by,create_time,update_by,update_time)
        VALUES
        (#{bonusBudget.budgetYear},#{bonusBudget.amountBonusBudget},#{bonusBudget.bonusBeforeOne},#{bonusBudget.deleteFlag},#{bonusBudget.createBy},#{bonusBudget.createTime},#{bonusBudget.updateBy},#{bonusBudget.updateTime})
    </insert>
    <!--修改奖金预算表-->
    <update id="updateBonusBudget">
        UPDATE bonus_budget
        SET
                    <if test="bonusBudget.budgetYear != null">
                        budget_year=#{bonusBudget.budgetYear},
                    </if>
                    <if test="bonusBudget.amountBonusBudget != null">
                        amount_bonus_budget=#{bonusBudget.amountBonusBudget},
                    </if>
                    <if test="bonusBudget.bonusBeforeOne != null">
                        bonus_before_one=#{bonusBudget.bonusBeforeOne},
                    </if>
                    <if test="bonusBudget.deleteFlag != null">
                        delete_flag=#{bonusBudget.deleteFlag},
                    </if>
                    <if test="bonusBudget.createBy != null">
                        create_by=#{bonusBudget.createBy},
                    </if>
                    <if test="bonusBudget.createTime != null">
                        create_time=#{bonusBudget.createTime},
                    </if>
                    <if test="bonusBudget.updateBy != null">
                        update_by=#{bonusBudget.updateBy},
                    </if>
                    <if test="bonusBudget.updateTime != null">
                        update_time=#{bonusBudget.updateTime}
                    </if>
        WHERE
                 bonus_budget_id=#{bonusBudget.bonusBudgetId}
    </update>
    <!--逻辑删除奖金预算表-->
    <update id="logicDeleteBonusBudgetByBonusBudgetId">
        UPDATE bonus_budget
        SET     delete_flag= 1,
                update_by=#{bonusBudget.updateBy},
                update_time=#{bonusBudget.updateTime}
        WHERE
                bonus_budget_id=#{bonusBudget.bonusBudgetId}
    </update>
    <!--逻辑批量删除奖金预算表-->
    <update id="logicDeleteBonusBudgetByBonusBudgetIds">
        UPDATE bonus_budget
        SET     delete_flag= 1,
                update_by=#{updateBy},
                update_time=#{updateTime}
        WHERE
         bonus_budget_id IN
            <foreach item="item"
                     collection="bonusBudgetIds"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
    </update>
    <!--批量新增奖金预算表-->
    <insert id="batchBonusBudget">
        INSERT INTO bonus_budget (budget_year,amount_bonus_budget,bonus_before_one,delete_flag,create_by,create_time,update_by,update_time)
        VALUES
        <foreach item="item" index="index"
                 collection="bonusBudgets"
                 separator=",">
            (#{item.budgetYear},#{item.amountBonusBudget},#{item.bonusBeforeOne},#{item.deleteFlag},#{item.createBy},#{item.createTime},#{item.updateBy},#{item.updateTime})
        </foreach>
    </insert>

    <!--物理删除奖金预算表-->
    <delete id="deleteBonusBudgetByBonusBudgetId">
        DELETE FROM bonus_budget
        WHERE  bonus_budget_id=#{bonusBudget}

    </delete>
    <!--物理批量删除奖金预算表-->
    <delete id="deleteBonusBudgetByBonusBudgetIds">
        DELETE FROM bonus_budget
        WHERE  bonus_budget_id IN
            <foreach item="item"
                     collection="bonusBudgetIds"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
    </delete>
    <!--批量修改奖金预算表-->
    <update id="updateBonusBudgets">
        update bonus_budget
        <trim prefix="set" suffixOverrides=",">
                <trim prefix="budget_year=case" suffix="end,">
                        <foreach collection="bonusBudgetList" item="item" index="index">
                                <if test="item.budgetYear != null">
                                    when bonus_budget_id=#{item.bonusBudgetId} then #{item.budgetYear}
                                </if>
                        </foreach>
                </trim>
                <trim prefix="amount_bonus_budget=case" suffix="end,">
                        <foreach collection="bonusBudgetList" item="item" index="index">
                                <if test="item.amountBonusBudget != null">
                                    when bonus_budget_id=#{item.bonusBudgetId} then #{item.amountBonusBudget}
                                </if>
                        </foreach>
                </trim>
                <trim prefix="bonus_before_one=case" suffix="end,">
                        <foreach collection="bonusBudgetList" item="item" index="index">
                                <if test="item.bonusBeforeOne != null">
                                    when bonus_budget_id=#{item.bonusBudgetId} then #{item.bonusBeforeOne}
                                </if>
                        </foreach>
                </trim>
                <trim prefix="delete_flag=case" suffix="end,">
                        <foreach collection="bonusBudgetList" item="item" index="index">
                                <if test="item.deleteFlag != null">
                                    when bonus_budget_id=#{item.bonusBudgetId} then #{item.deleteFlag}
                                </if>
                        </foreach>
                </trim>
                <trim prefix="create_by=case" suffix="end,">
                        <foreach collection="bonusBudgetList" item="item" index="index">
                                <if test="item.createBy != null">
                                    when bonus_budget_id=#{item.bonusBudgetId} then #{item.createBy}
                                </if>
                        </foreach>
                </trim>
                <trim prefix="create_time=case" suffix="end,">
                        <foreach collection="bonusBudgetList" item="item" index="index">
                                <if test="item.createTime != null">
                                    when bonus_budget_id=#{item.bonusBudgetId} then #{item.createTime}
                                </if>
                        </foreach>
                </trim>
                <trim prefix="update_by=case" suffix="end,">
                        <foreach collection="bonusBudgetList" item="item" index="index">
                                <if test="item.updateBy != null">
                                    when bonus_budget_id=#{item.bonusBudgetId} then #{item.updateBy}
                                </if>
                        </foreach>
                </trim>
                <trim prefix="update_time=case" suffix="end,">
                        <foreach collection="bonusBudgetList" item="item" index="index">
                                <if test="item.updateTime != null">
                                    when bonus_budget_id=#{item.bonusBudgetId} then #{item.updateTime}
                                </if>
                        </foreach>
                </trim>
        </trim>
        where
        <foreach collection="bonusBudgetList" separator="or" item="item" index="index">
                    bonus_budget_id=#{item.bonusBudgetId}
        </foreach>
    </update>
</mapper>


