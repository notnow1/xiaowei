<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.qixiaowei.operate.cloud.mapper.salary.EmpSalaryAdjustPlanMapper">
    <!--    查询个人调薪计划表-->
    <select id="selectEmpSalaryAdjustPlanByEmpSalaryAdjustPlanId"
            resultType="net.qixiaowei.operate.cloud.api.dto.salary.EmpSalaryAdjustPlanDTO">
        SELECT
        esa.emp_salary_adjust_plan_id,
        esa.employee_id,
        esa.effective_date,
        esa.adjustment_type,
        esa.adjust_department_id,
        esa.adjust_department_name,
        esa.adjust_post_id,
        esa.adjust_post_name,
        esa.adjust_official_rank_system_id,
        esa.adjust_official_rank_system_name,
        esa.adjust_official_rank,
        esa.adjust_official_rank_name,
        esa.adjust_emolument,
        esa.adjust_explain,
        esa.status,
        ess.emp_salary_adjust_snap_id,
        ess.emp_salary_adjust_plan_id,
        ess.employee_name,
        ess.employee_code,
        ess.employment_date,
        ess.seniority,
        ess.department_id,
        ess.department_name,
        ess.department_leader_id,
        ess.department_leader_name,
        ess.post_id,
        ess.post_name,
        ess.official_rank_system_id,
        ess.official_rank_system_name,
        ess.official_rank,
        ess.official_rank_name,
        ess.basic_wage
        FROM emp_salary_adjust_plan esa
        LEFT JOIN emp_salary_adjust_snap ess ON esa.emp_salary_adjust_plan_id = ess.emp_salary_adjust_plan_id
        AND ess.delete_flag = 0
        WHERE esa.emp_salary_adjust_plan_id=#{empSalaryAdjustPlanId}
        and esa.delete_flag=0
    </select>

    <!--    批量查询个人调薪计划表-->
    <select id="selectEmpSalaryAdjustPlanByEmpSalaryAdjustPlanIds"
            resultType="net.qixiaowei.operate.cloud.api.dto.salary.EmpSalaryAdjustPlanDTO">
        SELECT
        emp_salary_adjust_plan_id,employee_id,effective_date,adjustment_type,adjust_department_id,adjust_department_name,adjust_post_id,adjust_post_name,adjust_official_rank_system_id,adjust_official_rank_system_name,adjust_official_rank,adjust_official_rank_name,adjust_emolument,adjust_explain,status,delete_flag,create_by,create_time,update_by,update_time
        FROM emp_salary_adjust_plan
        WHERE emp_salary_adjust_plan_id in
        <foreach item="item"
                 collection="empSalaryAdjustPlanIds"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
        and delete_flag=0
    </select>

    <!--    查询个人调薪计划表列表-->
    <select id="selectEmpSalaryAdjustPlanList"
            resultType="net.qixiaowei.operate.cloud.api.dto.salary.EmpSalaryAdjustPlanDTO">
        SELECT
        esa.emp_salary_adjust_plan_id,
        esa.employee_id,
        esa.effective_date,
        esa.adjustment_type,
        esa.adjust_department_id,
        esa.adjust_department_name,
        esa.adjust_post_id,
        esa.adjust_post_name,
        esa.adjust_official_rank_system_id,
        esa.adjust_official_rank_system_name,
        esa.adjust_official_rank,
        esa.adjust_official_rank_name,
        esa.adjust_emolument,
        esa.adjust_explain,
        esa.status,
        esa.create_by,
        esa.create_time,
        ess.emp_salary_adjust_snap_id,
        ess.emp_salary_adjust_plan_id,
        ess.employee_name,
        ess.employee_code,
        ess.employment_date,
        ess.seniority,
        ess.department_id,
        ess.department_name,
        ess.department_leader_id,
        ess.department_leader_name,
        ess.post_id,
        ess.post_name,
        ess.official_rank_system_id,
        ess.official_rank_system_name,
        ess.official_rank,
        ess.official_rank_name,
        ess.basic_wage
        FROM emp_salary_adjust_plan esa
        LEFT JOIN emp_salary_adjust_snap ess
        ON esa.emp_salary_adjust_plan_id = ess.emp_salary_adjust_plan_id
        AND ess.delete_flag=0
        WHERE esa.delete_flag=0
        <if test="empSalaryAdjustPlan.empSalaryAdjustPlanId != null">
            and esa.emp_salary_adjust_plan_id=#{empSalaryAdjustPlan.empSalaryAdjustPlanId}
        </if>
        <if test="empSalaryAdjustPlan.status != null">
            and esa.status=#{empSalaryAdjustPlan.status}
        </if>
        <if test="empSalaryAdjustPlan.employeeId != null">
            and esa.employee_id=#{empSalaryAdjustPlan.employeeId}
        </if>
        <if test="empSalaryAdjustPlan.params.nowDate != null and empSalaryAdjustPlan.params.nowDate != null">
            and esa.effective_date &lt;= #{empSalaryAdjustPlan.params.nowDate}
        </if>
        <if test="empSalaryAdjustPlan.params.effectiveDateStart != null and empSalaryAdjustPlan.params.effectiveDateEnd != null">
            and esa.effective_date &gt;= #{empSalaryAdjustPlan.params.effectiveDateStart}
            and esa.effective_date &lt;= #{empSalaryAdjustPlan.params.effectiveDateEnd}
        </if>
        <if test="empSalaryAdjustPlan.adjustDepartmentId != null">
            and esa.adjust_department_id=#{empSalaryAdjustPlan.adjustDepartmentId}
        </if>
        <if test="empSalaryAdjustPlan.adjustDepartmentName != null and empSalaryAdjustPlan.adjustDepartmentName != ''">
            and esa.adjust_department_name like concat('%', #{empSalaryAdjustPlan.adjustDepartmentName}, '%')
        </if>
        <if test="empSalaryAdjustPlan.adjustPostId != null">
            and esa.adjust_post_id=#{empSalaryAdjustPlan.adjustPostId}
        </if>
        <if test="empSalaryAdjustPlan.adjustPostName != null and empSalaryAdjustPlan.adjustPostName != ''">
            and esa.adjust_post_name like '%${empSalaryAdjustPlan.adjustPostName}%'
        </if>
        <if test="empSalaryAdjustPlan.adjustOfficialRankSystemId != null">
            and esa.adjust_official_rank_system_id=#{empSalaryAdjustPlan.adjustOfficialRankSystemId}
        </if>
        <if test="empSalaryAdjustPlan.adjustOfficialRankSystemName != null and empSalaryAdjustPlan.adjustOfficialRankSystemName != ''">
            and esa.adjust_official_rank_system_name like '%${empSalaryAdjustPlan.adjustOfficialRankSystemName}%'
        </if>
        <if test="empSalaryAdjustPlan.adjustOfficialRank != null">
            and esa.adjust_official_rank=#{empSalaryAdjustPlan.adjustOfficialRank}
        </if>
        <if test="empSalaryAdjustPlan.adjustOfficialRankName != null and empSalaryAdjustPlan.adjustOfficialRankName != ''">
            and esa.adjust_official_rank_name like '%${empSalaryAdjustPlan.adjustOfficialRankName}%'
        </if>
        <if test="empSalaryAdjustPlan.adjustEmolument != null">
            and esa.adjust_emolument=#{empSalaryAdjustPlan.adjustEmolument}
        </if>
        <if test="empSalaryAdjustPlan.params.employeeName != null and empSalaryAdjustPlan.params.employeeName != ''">
            and ess.employee_name like '%${empSalaryAdjustPlan.params.employeeName}%'
        </if>
        <if test="empSalaryAdjustPlan.params.employeeCode != null and empSalaryAdjustPlan.params.employeeCode != ''">
            and ess.employee_code like '%${empSalaryAdjustPlan.params.employeeCode}%'
        </if>
        <if test="empSalaryAdjustPlan.params.employmentDateStart != null and empSalaryAdjustPlan.params.employmentDateEnd != null">
            and ess.employment_date &gt;= #{empSalaryAdjustPlan.params.employmentDateStart}
            and ess.employment_date &lt;= #{empSalaryAdjustPlan.params.employmentDateEnd}
        </if>
        <if test="empSalaryAdjustPlan.params.seniority != null and empSalaryAdjustPlan.params.seniority != ''">
            and ess.seniority like '%${empSalaryAdjustPlan.params.seniority}%'
        </if>
        <if test="empSalaryAdjustPlan.params.departmentId != null">
            and ess.department_id=#{empSalaryAdjustPlan.params.departmentId}
        </if>
        <if test="empSalaryAdjustPlan.params.departmentName != null and empSalaryAdjustPlan.params.departmentName != ''">
            and ess.department_name like '%${empSalaryAdjustPlan.params.departmentName}%'
        </if>
        <if test="empSalaryAdjustPlan.params.departmentLeaderId != null">
            and ess.department_leader_id=#{empSalaryAdjustPlan.params.departmentLeaderId}
        </if>
        <if test="empSalaryAdjustPlan.params.departmentLeaderName != null and empSalaryAdjustPlan.params.departmentLeaderName != ''">
            and ess.department_leader_name like '%${empSalaryAdjustPlan.params.departmentLeaderName}%'
        </if>
        <if test="empSalaryAdjustPlan.params.postId != null">
            and ess.post_id=#{empSalaryAdjustPlan.params.postId}
        </if>
        <if test="empSalaryAdjustPlan.params.postName != null and empSalaryAdjustPlan.params.postName != ''">
            and ess.post_name=#{empSalaryAdjustPlan.params.postName}
        </if>
        <if test="empSalaryAdjustPlan.params.officialRankSystemId != null">
            and ess.official_rank_system_id=#{empSalaryAdjustPlan.params.officialRankSystemId}
        </if>
        <if test="empSalaryAdjustPlan.params.officialRankSystemName != null and empSalaryAdjustPlan.params.officialRankSystemName != ''">
            and ess.official_rank_system_name=#{empSalaryAdjustPlan.params.officialRankSystemName}
        </if>
        <if test="empSalaryAdjustPlan.params.officialRank != null">
            and ess.official_rank=#{empSalaryAdjustPlan.params.officialRank}
        </if>
        <if test="empSalaryAdjustPlan.params.officialRankName != null and empSalaryAdjustPlan.params.officialRankName != ''">
            and ess.official_rank_name=#{empSalaryAdjustPlan.params.officialRankName}
        </if>
        <if test="empSalaryAdjustPlan.params.basicWage != null">
            and ess.basic_wage=#{empSalaryAdjustPlan.params.basicWage}
        </if>
        <if test="empSalaryAdjustPlan.params.workingAgeEqual != null and empSalaryAdjustPlan.params.workingAgeEqual.size() > 0">
            AND( 1 != 1
        </if>
        <!--司龄seniority等于-->
        <if test="empSalaryAdjustPlan.params.workingAgeEqual != null and empSalaryAdjustPlan.params.workingAgeEqual.size() > 0
                            and empSalaryAdjustPlan.params.workingAgeEqual.contains(1)">
            OR (
            ess.seniority NOT LIKE concat( '%', '年', '%' )
            AND ess.seniority IS NOT NULL)
        </if>
        <if test="empSalaryAdjustPlan.params.workingAgeEqual != null and empSalaryAdjustPlan.params.workingAgeEqual.size() > 0
                            and empSalaryAdjustPlan.params.workingAgeEqual.contains(2)">
            OR (
            SUBSTRING_INDEX( ess.seniority, '年', 1 ) &gt;= 1
            AND SUBSTRING_INDEX( ess.seniority, '年', 1 ) &lt; 3
            AND ess.seniority IS NOT NULL)
        </if>
        <if test="empSalaryAdjustPlan.params.workingAgeEqual != null and empSalaryAdjustPlan.params.workingAgeEqual.size() > 0
                            and empSalaryAdjustPlan.params.workingAgeEqual.contains(3)">
            OR (
            SUBSTRING_INDEX( ess.seniority, '年', 1 ) &gt;= 3
            AND SUBSTRING_INDEX( ess.seniority, '年', 1 ) &lt; 5
            AND ess.seniority IS NOT NULL)
        </if>
        <if test="empSalaryAdjustPlan.params.workingAgeEqual != null and empSalaryAdjustPlan.params.workingAgeEqual.size() > 0
                            and empSalaryAdjustPlan.params.workingAgeEqual.contains(4)">
            OR (
            SUBSTRING_INDEX( ess.seniority, '年', 1 ) &gt;= 5
            AND SUBSTRING_INDEX( ess.seniority, '年', 1 ) &lt; 10
            AND ess.seniority IS NOT NULL)
        </if>
        <if test="empSalaryAdjustPlan.params.workingAgeEqual != null and empSalaryAdjustPlan.params.workingAgeEqual.size() > 0
                            and empSalaryAdjustPlan.params.workingAgeEqual.contains(5)">
            OR (
            SUBSTRING_INDEX( ess.seniority, '年', 1 ) &gt;= 10
            AND ess.seniority IS NOT NULL)
        </if>
        <if test="empSalaryAdjustPlan.params.workingAgeEqual != null and empSalaryAdjustPlan.params.workingAgeEqual.size() > 0">
            )
        </if>
        <!--司龄ess.seniority不等于-->
        <if test="empSalaryAdjustPlan.params.workingAgeNotEqual != null and empSalaryAdjustPlan.params.workingAgeNotEqual.size() > 0">
            AND( 1 = 1
        </if>
        <if test="empSalaryAdjustPlan.params.workingAgeNotEqual != null and empSalaryAdjustPlan.params.workingAgeNotEqual.size() > 0
                            and empSalaryAdjustPlan.params.workingAgeNotEqual.contains(1)">
            AND (
            ess.seniority LIKE concat( '%', '年', '%' )
            OR ess.seniority IS NULL)
        </if>
        <if test="empSalaryAdjustPlan.params.workingAgeNotEqual != null and empSalaryAdjustPlan.params.workingAgeNotEqual.size() > 0
                            and empSalaryAdjustPlan.params.workingAgeNotEqual.contains(2)">
            AND (
            SUBSTRING_INDEX( ess.seniority, '年', 1 ) &lt; 1
            OR SUBSTRING_INDEX( ess.seniority, '年', 1 ) &gt;= 3
            OR ess.seniority NOT LIKE concat( '%', '年', '%' )
            OR ess.seniority IS NULL)
        </if>
        <if test="empSalaryAdjustPlan.params.workingAgeNotEqual != null and empSalaryAdjustPlan.params.workingAgeNotEqual.size() > 0
                            and empSalaryAdjustPlan.params.workingAgeNotEqual.contains(3)">
            AND (
            SUBSTRING_INDEX( ess.seniority, '年', 1 ) &lt; 3
            OR SUBSTRING_INDEX( ess.seniority, '年', 1 ) &gt;= 5
            OR ess.seniority NOT LIKE concat( '%', '年', '%' )
            OR ess.seniority IS NULL)
        </if>
        <if test="empSalaryAdjustPlan.params.workingAgeNotEqual != null and empSalaryAdjustPlan.params.workingAgeNotEqual.size() > 0
                            and empSalaryAdjustPlan.params.workingAgeNotEqual.contains(4)">
            AND (
            SUBSTRING_INDEX( ess.seniority, '年', 1 ) &lt; 5
            OR SUBSTRING_INDEX( ess.seniority, '年', 1 ) &gt;= 10
            OR ess.seniority NOT LIKE concat( '%', '年', '%' )
            OR ess.seniority IS NULL)
        </if>
        <if test="empSalaryAdjustPlan.params.workingAgeNotEqual != null and empSalaryAdjustPlan.params.workingAgeNotEqual.size() > 0
                            and empSalaryAdjustPlan.params.workingAgeNotEqual.contains(5)">
            AND (
            SUBSTRING_INDEX( ess.seniority, '年', 1 ) &lt; 10
            OR ess.seniority NOT LIKE concat( '%', '年', '%' )
            OR ess.seniority IS NULL)
        </if>
        <if test="empSalaryAdjustPlan.params.workingAgeNotEqual != null and empSalaryAdjustPlan.params.workingAgeNotEqual.size() > 0">
            )
        </if>
        <!--    员工过滤-->
        <if test="empSalaryAdjustPlan.params.employeeNameEqual != null and empSalaryAdjustPlan.params.employeeNameEqual.size() > 0">
            AND ess.employee_name IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.employeeNameEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.employeeNameNotEqual != null and empSalaryAdjustPlan.params.employeeNameNotEqual.size() > 0">
            AND (ess.employee_name NOT IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.employeeNameNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR ess.employee_name IS NULL
            )
        </if>
        <if test="empSalaryAdjustPlan.params.employeeNameLike != null and empSalaryAdjustPlan.params.employeeNameLike.size() > 0">
            AND
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.employeeNameLike"
                     index="index" open="(" separator="OR" close=")">
                ess.employee_name LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.employeeNameNotLike != null and empSalaryAdjustPlan.params.employeeNameNotLike.size() > 0">
            AND
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.employeeNameNotLike"
                     index="index" open="(" separator="AND" close=")">
                ess.employee_name NOT LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <!--    入职开始日期-->
        <if test="empSalaryAdjustPlan.params.employmentDateEqual != null and empSalaryAdjustPlan.params.employmentDateEqual.size() > 0">
            AND ess.employment_date IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.employmentDateEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.employmentDateNotEqual != null and empSalaryAdjustPlan.params.employmentDateNotEqual.size() > 0">
            AND (ess.employment_date NOT IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.employmentDateNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR ess.employment_date IS NULL
            )
        </if>
        <if test="empSalaryAdjustPlan.params.employmentDateBefore != null and empSalaryAdjustPlan.params.employmentDateBefore != ''">
            AND date_format(ess.employment_date,'%y%m%d') &lt;
            date_format(#{empSalaryAdjustPlan.params.employmentDateBefore},'%y%m%d')
        </if>
        <if test="empSalaryAdjustPlan.params.employmentDateNotBefore != null and empSalaryAdjustPlan.params.employmentDateNotBefore != ''">
            AND date_format(ess.employment_date,'%y%m%d') &gt;=
            date_format(#{empSalaryAdjustPlan.params.employmentDateNotBefore},'%y%m%d')
        </if>
        <if test="empSalaryAdjustPlan.params.employmentDateAfter != null and empSalaryAdjustPlan.params.employmentDateAfter != ''">
            AND date_format(ess.employment_date,'%y%m%d') &gt;
            date_format(#{empSalaryAdjustPlan.params.employmentDateAfter},'%y%m%d')
        </if>
        <if test="empSalaryAdjustPlan.params.employmentDateNotAfter != null and empSalaryAdjustPlan.params.employmentDateNotAfter != ''">
            AND date_format(ess.employment_date,'%y%m%d') &lt;=
            date_format(#{empSalaryAdjustPlan.params.employmentDateNotAfter},'%y%m%d')
        </if>
        <if test="empSalaryAdjustPlan.params.employmentDateStart != null and empSalaryAdjustPlan.params.employmentDateStart != ''">
            AND date_format(ess.employment_date,'%y%m%d') &gt;=
            date_format(#{empSalaryAdjustPlan.params.employmentDateStart},'%y%m%d')
        </if>
        <if test="empSalaryAdjustPlan.params.employmentDateEnd != null and empSalaryAdjustPlan.params.employmentDateEnd != ''">
            AND date_format(ess.employment_date,'%y%m%d') &lt;=
            date_format(#{empSalaryAdjustPlan.params.employmentDateEnd},'%y%m%d')
        </if>
        <!--    生效时间-->
        <if test="empSalaryAdjustPlan.params.effectiveDateEqual != null and empSalaryAdjustPlan.params.effectiveDateEqual.size() > 0">
            AND esa.effective_date IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.effectiveDateEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.effectiveDateNotEqual != null and empSalaryAdjustPlan.params.effectiveDateNotEqual.size() > 0">
            AND (esa.effective_date NOT IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.effectiveDateNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR esa.effective_date IS NULL
            )
        </if>
        <if test="empSalaryAdjustPlan.params.effectiveDateBefore != null and empSalaryAdjustPlan.params.effectiveDateBefore != ''">
            AND date_format(esa.effective_date,'%y%m%d') &lt;
            date_format(#{empSalaryAdjustPlan.params.effectiveDateBefore},'%y%m%d')
        </if>
        <if test="empSalaryAdjustPlan.params.effectiveDateNotBefore != null and empSalaryAdjustPlan.params.effectiveDateNotBefore != ''">
            AND date_format(esa.effective_date,'%y%m%d') &gt;=
            date_format(#{empSalaryAdjustPlan.params.effectiveDateNotBefore},'%y%m%d')
        </if>
        <if test="empSalaryAdjustPlan.params.effectiveDateAfter != null and empSalaryAdjustPlan.params.effectiveDateAfter != ''">
            AND date_format(esa.effective_date,'%y%m%d') &gt;
            date_format(#{empSalaryAdjustPlan.params.effectiveDateAfter},'%y%m%d')
        </if>
        <if test="empSalaryAdjustPlan.params.effectiveDateNotAfter != null and empSalaryAdjustPlan.params.effectiveDateNotAfter != ''">
            AND date_format(esa.effective_date,'%y%m%d') &lt;=
            date_format(#{empSalaryAdjustPlan.params.effectiveDateNotAfter},'%y%m%d')
        </if>
        <if test="empSalaryAdjustPlan.params.effectiveDateStart != null and empSalaryAdjustPlan.params.effectiveDateStart != ''">
            AND date_format(esa.effective_date,'%y%m%d') &gt;=
            date_format(#{empSalaryAdjustPlan.params.effectiveDateStart},'%y%m%d')
        </if>
        <if test="empSalaryAdjustPlan.params.effectiveDateEnd != null and empSalaryAdjustPlan.params.effectiveDateEnd != ''">
            AND date_format(esa.effective_date,'%y%m%d') &lt;=
            date_format(#{empSalaryAdjustPlan.params.effectiveDateEnd},'%y%m%d')
        </if>
        <!--    调整职级体系-->
        <if test="empSalaryAdjustPlan.params.adjustOfficialRankSystemIdEqual != null and empSalaryAdjustPlan.params.adjustOfficialRankSystemIdEqual.size() > 0">
            AND esa.adjust_official_rank_system_id IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.adjustOfficialRankSystemIdEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.adjustOfficialRankSystemIdNotEqual != null and empSalaryAdjustPlan.params.adjustOfficialRankSystemIdNotEqual.size() > 0">
            AND (esa.adjust_official_rank_system_id NOT IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.adjustOfficialRankSystemIdNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR esa.adjust_official_rank_system_id IS NULL
            )
        </if>
        <!--    原职级体系-->
        <if test="empSalaryAdjustPlan.params.officialRankSystemIdEqual != null and empSalaryAdjustPlan.params.officialRankSystemIdEqual.size() > 0">
            AND ess.official_rank_system_id IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.officialRankSystemIdEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.officialRankSystemIdNotEqual != null and empSalaryAdjustPlan.params.officialRankSystemIdNotEqual.size() > 0">
            AND (ess.official_rank_system_id NOT IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.officialRankSystemIdNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR ess.official_rank_system_id IS NULL
            )
        </if>
        <!--    调整职级 -->
        <if test="empSalaryAdjustPlan.params.adjustOfficialRankNameEqual != null and empSalaryAdjustPlan.params.adjustOfficialRankNameEqual.size() > 0">
            AND esa.adjust_official_rank_name IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.adjustOfficialRankNameEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.adjustOfficialRankNameNotEqual != null and empSalaryAdjustPlan.params.adjustOfficialRankNameNotEqual.size() > 0">
            AND (esa.adjust_official_rank_name NOT IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.adjustOfficialRankNameNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR esa.adjust_official_rank_name IS NULL
            )
        </if>
        <!--    原职级 -->
        <if test="empSalaryAdjustPlan.params.officialRankNameEqual != null and empSalaryAdjustPlan.params.officialRankNameEqual.size() > 0">
            AND ess.official_rank_name IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.officialRankNameEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.officialRankNotNameEqual != null and empSalaryAdjustPlan.params.officialRankNotNameEqual.size() > 0">
            AND (ess.official_rank_name NOT IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.officialRankNotNameEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR ess.official_rank_name IS NULL
            )
        </if>
        <!--    调整工资 -->
        <if test="empSalaryAdjustPlan.params.adjustEmolumentEqual != null and empSalaryAdjustPlan.params.adjustEmolumentEqual.size() > 0">
            AND IFNULL(esa.adjust_emolument,0) IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.adjustEmolumentEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.adjustEmolumentNotEqual != null and empSalaryAdjustPlan.params.adjustEmolumentNotEqual.size() > 0">
            AND IFNULL(esa.adjust_emolument,0) NOT IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.adjustEmolumentNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.adjustEmolumentLessThan != null and empSalaryAdjustPlan.params.adjustEmolumentLessThan != ''">
            AND esa.adjust_emolument &lt; #{empSalaryAdjustPlan.params.adjustEmolumentLessThan}
        </if>
        <if test="empSalaryAdjustPlan.params.adjustEmolumentNotLessThan != null and empSalaryAdjustPlan.params.adjustEmolumentNotLessThan != ''">
            AND esa.adjust_emolument &gt;= #{empSalaryAdjustPlan.params.adjustEmolumentNotLessThan}
        </if>
        <if test="empSalaryAdjustPlan.params.adjustEmolumentGreaterThan != null and empSalaryAdjustPlan.params.adjustEmolumentGreaterThan != ''">
            AND esa.adjust_emolument &gt; #{empSalaryAdjustPlan.params.adjustEmolumentGreaterThan}
        </if>
        <if test="empSalaryAdjustPlan.params.adjustEmolumentNotGreaterThan != null and empSalaryAdjustPlan.params.adjustEmolumentNotGreaterThan != ''">
            AND esa.adjust_emolument &lt;= #{empSalaryAdjustPlan.params.adjustEmolumentNotGreaterThan}
        </if>
        <!--    原工资-->
        <if test="empSalaryAdjustPlan.params.basicWageEqual != null and empSalaryAdjustPlan.params.basicWageEqual.size() > 0">
            AND IFNULL( ess.basic_wage, 0 ) IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.basicWageEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.basicWageNotEqual != null and empSalaryAdjustPlan.params.basicWageNotEqual.size() > 0">
            AND IFNULL( ess.basic_wage, 0 ) NOT IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.basicWageNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.basicWageLessThan != null and empSalaryAdjustPlan.params.basicWageLessThan != ''">
            AND ess.basic_wage &lt; #{empSalaryAdjustPlan.params.basicWageLessThan}
        </if>
        <if test="empSalaryAdjustPlan.params.basicWageNotLessThan != null and empSalaryAdjustPlan.params.basicWageNotLessThan != ''">
            AND ess.basic_wage &gt;= #{empSalaryAdjustPlan.params.basicWageNotLessThan}
        </if>
        <if test="empSalaryAdjustPlan.params.basicWageGreaterThan != null and empSalaryAdjustPlan.params.basicWageGreaterThan != ''">
            AND ess.basic_wage &gt; #{empSalaryAdjustPlan.params.basicWageGreaterThan}
        </if>
        <if test="empSalaryAdjustPlan.params.basicWageNotGreaterThan != null and empSalaryAdjustPlan.params.basicWageNotGreaterThan != ''">
            AND ess.basic_wage &lt;= #{empSalaryAdjustPlan.params.basicWageNotGreaterThan}
        </if>
        <!--员工高级搜索-->
        <!--员工名称-->
        <if test="empSalaryAdjustPlan.params.employeeNameEqual != null and empSalaryAdjustPlan.params.employeeNameEqual.size() > 0">
            AND ess.employee_name IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.employeeNameEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.employeeNameNotEqual != null and empSalaryAdjustPlan.params.employeeNameNotEqual.size() > 0">
            AND (ess.employee_name NOT IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.employeeNameNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR ess.employee_name IS NULL
            )
        </if>
        <if test="empSalaryAdjustPlan.params.employeeNameLike != null and empSalaryAdjustPlan.params.employeeNameLike.size() > 0">
            AND
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.employeeNameLike"
                     index="index" open="(" separator="OR" close=")">
                ess.employee_name LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.employeeNameNotLike != null and empSalaryAdjustPlan.params.employeeNameNotLike.size() > 0">
            AND
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.employeeNameNotLike"
                     index="index" open="(" separator="AND" close=")">
                ess.employee_name NOT LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <!--员工编码-->
        <if test="empSalaryAdjustPlan.params.employeeCodeEqual != null and empSalaryAdjustPlan.params.employeeCodeEqual.size() > 0">
            AND ess.employee_code IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.employeeCodeEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.employeeCodeNotEqual != null and empSalaryAdjustPlan.params.employeeCodeNotEqual.size() > 0">
            AND (ess.employee_code NOT IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.employeeCodeNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR ess.employee_code IS NULL
            )
        </if>
        <if test="empSalaryAdjustPlan.params.employeeCodeLike != null and empSalaryAdjustPlan.params.employeeCodeLike.size() > 0">
            AND
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.employeeCodeLike"
                     index="index" open="(" separator="AND" close=")">
                ess.employee_code LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.employeeCodeNotLike != null and empSalaryAdjustPlan.params.employeeCodeNotLike.size() > 0">
            AND
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.employeeCodeNotLike"
                     index="index" open="(" separator="AND" close=")">
                ess.employee_code NOT LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <!--部门负责人名称-->
        <if test="empSalaryAdjustPlan.params.departmentLeaderNameEqual != null and empSalaryAdjustPlan.params.departmentLeaderNameEqual.size() > 0">
            AND ess.department_leader_name IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.departmentLeaderNameEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.departmentLeaderNameNotEqual != null and empSalaryAdjustPlan.params.departmentLeaderNameNotEqual.size() > 0">
            AND (ess.department_leader_name NOT IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.departmentLeaderNameNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR ess.department_leader_name IS NULL
            )
        </if>
        <if test="empSalaryAdjustPlan.params.departmentLeaderNameLike != null and empSalaryAdjustPlan.params.departmentLeaderNameLike.size() > 0">
            AND
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.departmentLeaderNameLike"
                     index="index" open="(" separator="AND" close=")">
                ess.department_leader_name LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.departmentLeaderNameNotLike != null and empSalaryAdjustPlan.params.departmentLeaderNameNotLike.size() > 0">
            AND
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.departmentLeaderNameNotLike"
                     index="index" open="(" separator="AND" close=")">
                ess.department_leader_name NOT LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <!--调整部门-->
        <if test="empSalaryAdjustPlan.params.adjustDepartmentIdEqual != null and empSalaryAdjustPlan.params.adjustDepartmentIdEqual.size() > 0">
            AND esa.adjust_department_id IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.adjustDepartmentIdEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.adjustDepartmentIdNotEqual != null and empSalaryAdjustPlan.params.adjustDepartmentIdNotEqual.size() > 0">
            AND (esa.adjust_department_id NOT IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.adjustDepartmentIdNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR esa.adjust_department_id IS NULL
            )
        </if>
        <!--原部门-->
        <if test="empSalaryAdjustPlan.params.departmentIdEqual != null and empSalaryAdjustPlan.params.departmentIdEqual.size() > 0">
            AND ess.department_id IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.departmentIdEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.departmentIdNotEqual != null and empSalaryAdjustPlan.params.departmentIdNotEqual.size() > 0">
            AND (ess.department_id NOT IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.departmentIdNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR ess.department_id IS NULL
            )
        </if>
        <!--调整岗位名称-->
        <if test="empSalaryAdjustPlan.params.adjustPostIdEqual != null and empSalaryAdjustPlan.params.adjustPostIdEqual.size() > 0">
            AND esa.adjust_post_id IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.adjustPostIdEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.adjustPostIdNotEqual != null and empSalaryAdjustPlan.params.adjustPostIdNotEqual.size() > 0">
            AND (esa.adjust_post_id NOT IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.adjustPostIdNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR esa.adjust_post_id IS NULL
            )
        </if>
        <if test="empSalaryAdjustPlan.params.adjustPostIdNull != null">
            AND esa.adjust_post_id IS NULL
        </if>
        <if test="empSalaryAdjustPlan.params.adjustPostIdNotNull != null">
            AND esa.adjust_post_id IS NOT NULL
        </if>
        <!--原岗位名称-->
        <if test="empSalaryAdjustPlan.params.postIdEqual != null and empSalaryAdjustPlan.params.postIdEqual.size() > 0">
            AND ess.post_id IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.postIdEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="empSalaryAdjustPlan.params.postIdNotEqual != null and empSalaryAdjustPlan.params.postIdNotEqual.size() > 0">
            AND (ess.post_id NOT IN
            <foreach item="item"
                     collection="empSalaryAdjustPlan.params.postIdNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR ess.post_id IS NULL
            )
        </if>
        <if test="empSalaryAdjustPlan.params.postIdNull != null">
            AND ess.adjust_post_id IS NULL
        </if>
        <if test="empSalaryAdjustPlan.params.postIdNotNull != null">
            AND ess.adjust_post_id IS NOT NULL
        </if>
        <!-- 数据范围过滤 -->
        ${empSalaryAdjustPlan.params.dataScope}
        ORDER BY esa.create_time DESC
    </select>
    <!--根据员工ID获取个人调薪计划表-->
    <select id="selectByEmployeeId"
            resultType="net.qixiaowei.operate.cloud.api.dto.salary.EmpSalaryAdjustPlanDTO">
        SELECT
        esp.emp_salary_adjust_plan_id,
        esp.employee_id,
        esp.effective_date,
        esp.adjustment_type,
        esp.adjust_department_id,
        esp.adjust_department_name,
        esp.adjust_post_id,
        esp.adjust_post_name,
        esp.adjust_official_rank_system_id,
        esp.adjust_official_rank_system_name,
        esp.adjust_official_rank,
        esp.adjust_official_rank_name,
        esp.adjust_emolument,
        esp.adjust_explain,
        esp.status,
        ess.post_id,
        ess.post_name,
        ess.official_rank_name,
        ess.basic_wage
        FROM emp_salary_adjust_plan esp
        LEFT JOIN emp_salary_adjust_snap ess
        ON esp.emp_salary_adjust_plan_id = ess.emp_salary_adjust_plan_id
        AND ess.delete_flag=0
        WHERE esp.delete_flag=0
        AND esp.status != 0
        AND esp.employee_id = #{employeeId}
        AND esp.effective_date &lt;= now()
    </select>
    <select id="selectByEmployeeIds"
            resultType="net.qixiaowei.operate.cloud.api.dto.salary.EmpSalaryAdjustPlanDTO">
        SELECT
        esp.emp_salary_adjust_plan_id,
        esp.employee_id,
        esp.effective_date,
        esp.adjustment_type,
        esp.adjust_department_id,
        esp.adjust_department_name,
        esp.adjust_post_id,
        esp.adjust_post_name,
        esp.adjust_official_rank_system_id,
        esp.adjust_official_rank_system_name,
        esp.adjust_official_rank,
        esp.adjust_official_rank_name,
        esp.adjust_emolument,
        esp.adjust_explain,
        esp.status,
        ess.post_id,
        ess.post_name,
        ess.official_rank_name,
        ess.basic_wage
        FROM emp_salary_adjust_plan esp
        LEFT JOIN emp_salary_adjust_snap ess
        ON esp.emp_salary_adjust_plan_id = ess.emp_salary_adjust_plan_id
        AND ess.delete_flag=0
        WHERE esp.delete_flag=0
        AND esp.status = 1
        AND esp.employee_id
        IN
        <foreach collection="employeeIds" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>
    <select id="selectBySystemIds"
            resultType="net.qixiaowei.operate.cloud.api.dto.salary.EmpSalaryAdjustPlanDTO">
        SELECT
        esp.emp_salary_adjust_plan_id,
        esp.employee_id,
        esp.effective_date,
        esp.adjustment_type,
        esp.adjust_department_id,
        esp.adjust_department_name,
        esp.adjust_post_id,
        esp.adjust_post_name,
        esp.adjust_official_rank_system_id,
        esp.adjust_official_rank_system_name,
        esp.adjust_official_rank,
        esp.adjust_official_rank_name,
        esp.adjust_emolument,
        esp.adjust_explain,
        esp.status,
        ess.post_id,
        ess.post_name,
        ess.official_rank_name,
        ess.employee_name,
        ess.basic_wage
        FROM emp_salary_adjust_plan esp
        LEFT JOIN emp_salary_adjust_snap ess
        ON esp.emp_salary_adjust_plan_id = ess.emp_salary_adjust_plan_id
        AND ess.delete_flag=0
        WHERE esp.delete_flag=0
        AND esp.status = 1
        AND esp.adjust_official_rank_system_id
        IN
        <foreach collection="officialRankSystemIds" index="index" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>
    <!--新增个人调薪计划表-->
    <insert id="insertEmpSalaryAdjustPlan" useGeneratedKeys="true" keyProperty="empSalaryAdjustPlanId">
        INSERT INTO emp_salary_adjust_plan
        (employee_id,effective_date,adjustment_type,adjust_department_id,adjust_department_name,adjust_post_id,adjust_post_name,adjust_official_rank_system_id,adjust_official_rank_system_name,adjust_official_rank,adjust_official_rank_name,adjust_emolument,adjust_explain,status,delete_flag,create_by,create_time,update_by,update_time)
        VALUES
        (#{empSalaryAdjustPlan.employeeId},#{empSalaryAdjustPlan.effectiveDate},#{empSalaryAdjustPlan.adjustmentType},#{empSalaryAdjustPlan.adjustDepartmentId},#{empSalaryAdjustPlan.adjustDepartmentName},#{empSalaryAdjustPlan.adjustPostId},#{empSalaryAdjustPlan.adjustPostName},#{empSalaryAdjustPlan.adjustOfficialRankSystemId},#{empSalaryAdjustPlan.adjustOfficialRankSystemName},#{empSalaryAdjustPlan.adjustOfficialRank},#{empSalaryAdjustPlan.adjustOfficialRankName},#{empSalaryAdjustPlan.adjustEmolument},#{empSalaryAdjustPlan.adjustExplain},#{empSalaryAdjustPlan.status},#{empSalaryAdjustPlan.deleteFlag},#{empSalaryAdjustPlan.createBy},#{empSalaryAdjustPlan.createTime},#{empSalaryAdjustPlan.updateBy},#{empSalaryAdjustPlan.updateTime})
    </insert>
    <!--修改个人调薪计划表-->
    <update id="updateEmpSalaryAdjustPlan">
        UPDATE emp_salary_adjust_plan
        SET
        <if test="empSalaryAdjustPlan.employeeId != null">
            employee_id=#{empSalaryAdjustPlan.employeeId},
        </if>
        effective_date=#{empSalaryAdjustPlan.effectiveDate},
        adjustment_type=#{empSalaryAdjustPlan.adjustmentType},
        adjust_department_id=#{empSalaryAdjustPlan.adjustDepartmentId},
        adjust_department_name=#{empSalaryAdjustPlan.adjustDepartmentName},
        adjust_post_id=#{empSalaryAdjustPlan.adjustPostId},
        adjust_post_name=#{empSalaryAdjustPlan.adjustPostName},
        adjust_official_rank_system_id=#{empSalaryAdjustPlan.adjustOfficialRankSystemId},
        adjust_official_rank_system_name=#{empSalaryAdjustPlan.adjustOfficialRankSystemName},
        adjust_official_rank=#{empSalaryAdjustPlan.adjustOfficialRank},
        adjust_official_rank_name=#{empSalaryAdjustPlan.adjustOfficialRankName},
        adjust_emolument=#{empSalaryAdjustPlan.adjustEmolument},
        <if test="empSalaryAdjustPlan.adjustExplain != null">
            adjust_explain=#{empSalaryAdjustPlan.adjustExplain},
        </if>
        <if test="empSalaryAdjustPlan.status != null">
            status=#{empSalaryAdjustPlan.status},
        </if>
        <if test="empSalaryAdjustPlan.deleteFlag != null">
            delete_flag=#{empSalaryAdjustPlan.deleteFlag},
        </if>
        <if test="empSalaryAdjustPlan.createBy != null">
            create_by=#{empSalaryAdjustPlan.createBy},
        </if>
        <if test="empSalaryAdjustPlan.createTime != null">
            create_time=#{empSalaryAdjustPlan.createTime},
        </if>
        <if test="empSalaryAdjustPlan.updateBy != null">
            update_by=#{empSalaryAdjustPlan.updateBy},
        </if>
        <if test="empSalaryAdjustPlan.updateTime != null">
            update_time=#{empSalaryAdjustPlan.updateTime}
        </if>
        WHERE
        emp_salary_adjust_plan_id=#{empSalaryAdjustPlan.empSalaryAdjustPlanId}
    </update>
    <!--逻辑删除个人调薪计划表-->
    <update id="logicDeleteEmpSalaryAdjustPlanByEmpSalaryAdjustPlanId">
        UPDATE emp_salary_adjust_plan
        SET delete_flag= 1,
        update_by=#{empSalaryAdjustPlan.updateBy},
        update_time=#{empSalaryAdjustPlan.updateTime}
        WHERE
        emp_salary_adjust_plan_id=#{empSalaryAdjustPlan.empSalaryAdjustPlanId}
    </update>
    <!--逻辑批量删除个人调薪计划表-->
    <update id="logicDeleteEmpSalaryAdjustPlanByEmpSalaryAdjustPlanIds">
        UPDATE emp_salary_adjust_plan
        SET delete_flag= 1,
        update_by=#{updateBy},
        update_time=#{updateTime}
        WHERE
        emp_salary_adjust_plan_id IN
        <foreach item="item"
                 collection="empSalaryAdjustPlanIds"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <!--批量新增个人调薪计划表-->
    <insert id="batchEmpSalaryAdjustPlan">
        INSERT INTO emp_salary_adjust_plan
        (employee_id,effective_date,adjustment_type,adjust_department_id,adjust_department_name,adjust_post_id,adjust_post_name,adjust_official_rank_system_id,adjust_official_rank_system_name,adjust_official_rank,adjust_official_rank_name,adjust_emolument,adjust_explain,status,delete_flag,create_by,create_time,update_by,update_time)
        VALUES
        <foreach item="item" index="index"
                 collection="empSalaryAdjustPlans"
                 separator=",">
            (#{item.employeeId},#{item.effectiveDate},#{item.adjustmentType},#{item.adjustDepartmentId},#{item.adjustDepartmentName},#{item.adjustPostId},#{item.adjustPostName},#{item.adjustOfficialRankSystemId},#{item.adjustOfficialRankSystemName},#{item.adjustOfficialRank},#{item.adjustOfficialRankName},#{item.adjustEmolument},#{item.adjustExplain},#{item.status},#{item.deleteFlag},#{item.createBy},#{item.createTime},#{item.updateBy},#{item.updateTime})
        </foreach>
    </insert>

    <!--物理删除个人调薪计划表-->
    <delete id="deleteEmpSalaryAdjustPlanByEmpSalaryAdjustPlanId">
        DELETE FROM emp_salary_adjust_plan
        WHERE emp_salary_adjust_plan_id=#{empSalaryAdjustPlan}

    </delete>
    <!--物理批量删除个人调薪计划表-->
    <delete id="deleteEmpSalaryAdjustPlanByEmpSalaryAdjustPlanIds">
        DELETE FROM emp_salary_adjust_plan
        WHERE emp_salary_adjust_plan_id IN
        <foreach item="item"
                 collection="empSalaryAdjustPlanIds"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <!--批量修改个人调薪计划表-->
    <update id="updateEmpSalaryAdjustPlans">
        update emp_salary_adjust_plan
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="employee_id=case" suffix="end,">
                <foreach collection="empSalaryAdjustPlanList" item="item" index="index">
                    <if test="item.employeeId != null">
                        when emp_salary_adjust_plan_id=#{item.empSalaryAdjustPlanId} then #{item.employeeId}
                    </if>
                </foreach>
            </trim>
            <trim prefix="effective_date=case" suffix="end,">
                <foreach collection="empSalaryAdjustPlanList" item="item" index="index">
                    <if test="item.effectiveDate != null">
                        when emp_salary_adjust_plan_id=#{item.empSalaryAdjustPlanId} then #{item.effectiveDate}
                    </if>
                </foreach>
            </trim>
            <trim prefix="adjustment_type=case" suffix="end,">
                <foreach collection="empSalaryAdjustPlanList" item="item" index="index">
                    <if test="item.adjustmentType != null and item.adjustmentType != ''">
                        when emp_salary_adjust_plan_id=#{item.empSalaryAdjustPlanId} then #{item.adjustmentType}
                    </if>
                </foreach>
            </trim>
            <trim prefix="adjust_department_id=case" suffix="end,">
                <foreach collection="empSalaryAdjustPlanList" item="item" index="index">
                    <if test="item.adjustDepartmentId != null">
                        when emp_salary_adjust_plan_id=#{item.empSalaryAdjustPlanId} then #{item.adjustDepartmentId}
                    </if>
                </foreach>
            </trim>
            <trim prefix="adjust_department_name=case" suffix="end,">
                <foreach collection="empSalaryAdjustPlanList" item="item" index="index">
                    <if test="item.adjustDepartmentName != null and item.adjustDepartmentName != ''">
                        when emp_salary_adjust_plan_id=#{item.empSalaryAdjustPlanId} then #{item.adjustDepartmentName}
                    </if>
                </foreach>
            </trim>
            <trim prefix="adjust_post_id=case" suffix="end,">
                <foreach collection="empSalaryAdjustPlanList" item="item" index="index">
                    <if test="item.adjustPostId != null">
                        when emp_salary_adjust_plan_id=#{item.empSalaryAdjustPlanId} then #{item.adjustPostId}
                    </if>
                </foreach>
            </trim>
            <trim prefix="adjust_post_name=case" suffix="end,">
                <foreach collection="empSalaryAdjustPlanList" item="item" index="index">
                    <if test="item.adjustPostName != null and item.adjustPostName != ''">
                        when emp_salary_adjust_plan_id=#{item.empSalaryAdjustPlanId} then #{item.adjustPostName}
                    </if>
                </foreach>
            </trim>
            <trim prefix="adjust_official_rank_system_id=case" suffix="end,">
                <foreach collection="empSalaryAdjustPlanList" item="item" index="index">
                    <if test="item.adjustOfficialRankSystemId != null">
                        when emp_salary_adjust_plan_id=#{item.empSalaryAdjustPlanId} then
                        #{item.adjustOfficialRankSystemId}
                    </if>
                </foreach>
            </trim>
            <trim prefix="adjust_official_rank_system_name=case" suffix="end,">
                <foreach collection="empSalaryAdjustPlanList" item="item" index="index">
                    <if test="item.adjustOfficialRankSystemName != null and item.adjustOfficialRankSystemName != ''">
                        when emp_salary_adjust_plan_id=#{item.empSalaryAdjustPlanId} then
                        #{item.adjustOfficialRankSystemName}
                    </if>
                </foreach>
            </trim>
            <trim prefix="adjust_official_rank=case" suffix="end,">
                <foreach collection="empSalaryAdjustPlanList" item="item" index="index">
                    <if test="item.adjustOfficialRank != null">
                        when emp_salary_adjust_plan_id=#{item.empSalaryAdjustPlanId} then #{item.adjustOfficialRank}
                    </if>
                </foreach>
            </trim>
            <trim prefix="adjust_official_rank_name=case" suffix="end,">
                <foreach collection="empSalaryAdjustPlanList" item="item" index="index">
                    <if test="item.adjustOfficialRankName != null and item.adjustOfficialRankName != ''">
                        when emp_salary_adjust_plan_id=#{item.empSalaryAdjustPlanId} then #{item.adjustOfficialRankName}
                    </if>
                </foreach>
            </trim>
            <trim prefix="adjust_emolument=case" suffix="end,">
                <foreach collection="empSalaryAdjustPlanList" item="item" index="index">
                    <if test="item.adjustEmolument != null">
                        when emp_salary_adjust_plan_id=#{item.empSalaryAdjustPlanId} then #{item.adjustEmolument}
                    </if>
                </foreach>
            </trim>
            <trim prefix="adjust_explain=case" suffix="end,">
                <foreach collection="empSalaryAdjustPlanList" item="item" index="index">
                    <if test="item.adjustExplain != null and item.adjustExplain != ''">
                        when emp_salary_adjust_plan_id=#{item.empSalaryAdjustPlanId} then #{item.adjustExplain}
                    </if>
                </foreach>
            </trim>
            <trim prefix="status=case" suffix="end,">
                <foreach collection="empSalaryAdjustPlanList" item="item" index="index">
                    <if test="item.status != null">
                        when emp_salary_adjust_plan_id=#{item.empSalaryAdjustPlanId} then #{item.status}
                    </if>
                </foreach>
            </trim>
            <trim prefix="delete_flag=case" suffix="end,">
                <foreach collection="empSalaryAdjustPlanList" item="item" index="index">
                    <if test="item.deleteFlag != null">
                        when emp_salary_adjust_plan_id=#{item.empSalaryAdjustPlanId} then #{item.deleteFlag}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_by=case" suffix="end,">
                <foreach collection="empSalaryAdjustPlanList" item="item" index="index">
                    <if test="item.createBy != null">
                        when emp_salary_adjust_plan_id=#{item.empSalaryAdjustPlanId} then #{item.createBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_time=case" suffix="end,">
                <foreach collection="empSalaryAdjustPlanList" item="item" index="index">
                    <if test="item.createTime != null">
                        when emp_salary_adjust_plan_id=#{item.empSalaryAdjustPlanId} then #{item.createTime}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_by=case" suffix="end,">
                <foreach collection="empSalaryAdjustPlanList" item="item" index="index">
                    <if test="item.updateBy != null">
                        when emp_salary_adjust_plan_id=#{item.empSalaryAdjustPlanId} then #{item.updateBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_time=case" suffix="end,">
                <foreach collection="empSalaryAdjustPlanList" item="item" index="index">
                    <if test="item.updateTime != null">
                        when emp_salary_adjust_plan_id=#{item.empSalaryAdjustPlanId} then #{item.updateTime}
                    </if>
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="empSalaryAdjustPlanList" separator="or" item="item" index="index">
            emp_salary_adjust_plan_id=#{item.empSalaryAdjustPlanId}
        </foreach>
    </update>
</mapper>


