<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.qixiaowei.operate.cloud.mapper.salary.SalaryItemMapper">
    <!--    查询工资项-->
    <select id="selectSalaryItemBySalaryItemId"
            resultType="net.qixiaowei.operate.cloud.api.dto.salary.SalaryItemDTO">
        SELECT
        salary_item_id, first_level_item, second_level_item, third_level_item, scope, sort, delete_flag, create_by,
        create_time, update_by, update_time
        FROM salary_item
        WHERE salary_item_id=#{salaryItemId}
        and delete_flag=0
    </select>

    <!--    查询工资项列表-->
    <select id="selectSalaryItemList" resultType="net.qixiaowei.operate.cloud.api.dto.salary.SalaryItemDTO">
        SELECT
        si.salary_item_id, si.first_level_item, si.second_level_item, si.third_level_item, si.scope, si.sort, si.delete_flag, si.create_by,
        si.create_time, si.update_by, si.update_time
        FROM salary_item si
        WHERE si.delete_flag=0
        <if test="salaryItem.salaryItemId != null">
            and si.salary_item_id=#{salaryItem.salaryItemId}
        </if>
        <if test="salaryItem.firstLevelItem != null">
            and si.first_level_item=#{salaryItem.firstLevelItem}
        </if>
        <if test="salaryItem.secondLevelItem != null">
            and si.second_level_item=#{salaryItem.secondLevelItem}
        </if>
        <if test="salaryItem.thirdLevelItem != null and salaryItem.thirdLevelItem != ''">
            and si.third_level_item like concat('%', #{salaryItem.thirdLevelItem}, '%')
        </if>
        <if test="salaryItem.scope != null">
            and si.scope=#{salaryItem.scope}
        </if>
        <if test="salaryItem.sort != null">
            and si.sort=#{salaryItem.sort}
        </if>
        <if test="salaryItem.deleteFlag != null">
            and si.delete_flag=#{salaryItem.deleteFlag}
        </if>
        <if test="salaryItem.createBy != null">
            and si.create_by=#{salaryItem.createBy}
        </if>
        <if test="salaryItem.createTime != null">
            and si.create_time=#{salaryItem.createTime}
        </if>
        <if test="salaryItem.updateBy != null">
            and si.update_by=#{salaryItem.updateBy}
        </if>
        <if test="salaryItem.updateTime != null">
            and si.update_time=#{salaryItem.updateTime}
        </if>
        <!--    一级薪酬项目过滤-->
        <if test="salaryItem.params.firstLevelItemEqual != null and salaryItem.params.firstLevelItemEqual.size() > 0">
            AND si.first_level_item IN
            <foreach item="item"
                     collection="salaryItem.params.firstLevelItemEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="salaryItem.params.firstLevelItemNotEqual != null and salaryItem.params.firstLevelItemNotEqual.size() > 0">
            AND (si.first_level_item NOT IN
            <foreach item="item"
                     collection="salaryItem.params.firstLevelItemNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR si.first_level_item IS NULL
            )
        </if>
        <!--    二级薪酬项目过滤-->
        <if test="salaryItem.params.secondLevelItemEqual != null and salaryItem.params.secondLevelItemEqual.size() > 0">
            AND si.second_level_item IN
            <foreach item="item"
                     collection="salaryItem.params.secondLevelItemEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="salaryItem.params.secondLevelItemNotEqual != null and salaryItem.params.secondLevelItemNotEqual.size() > 0">
            AND (si.first_level_item NOT IN
            <foreach item="item"
                     collection="salaryItem.params.secondLevelItemNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR si.first_level_item IS NULL
            )
        </if>
        <!--    三级薪酬项目过滤-->
        <if test="salaryItem.params.thirdLevelItemEqual != null and salaryItem.params.thirdLevelItemEqual.size() > 0">
            AND si.third_level_item IN
            <foreach item="item"
                     collection="salaryItem.params.thirdLevelItemEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="salaryItem.params.thirdLevelItemNotEqual != null and salaryItem.params.thirdLevelItemNotEqual.size() > 0">
            AND (si.third_level_item NOT IN
            <foreach item="item"
                     collection="salaryItem.params.thirdLevelItemNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR si.third_level_item IS NULL
            )
        </if>
        <if test="salaryItem.params.thirdLevelItemLike != null and salaryItem.params.thirdLevelItemLike.size() > 0">
            AND
            <foreach item="item"
                     collection="salaryItem.params.thirdLevelItemLike"
                     index="index" open="(" separator="OR" close=")">
                si.third_level_item LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <if test="salaryItem.params.thirdLevelItemNotLike != null and salaryItem.params.thirdLevelItemNotLike.size() > 0">
            AND
            <foreach item="item"
                     collection="salaryItem.params.thirdLevelItemNotLike"
                     index="index" open="(" separator="AND" close=")">
                si.third_level_item NOT LIKE concat('%', #{item}, '%')
            </foreach>
        </if>
        <!--    级别-->
        <if test="salaryItem.params.scopeEqual != null and salaryItem.params.scopeEqual.size() > 0">
            AND si.scope IN
            <foreach item="item"
                     collection="salaryItem.params.scopeEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="salaryItem.params.scopeNotEqual != null and salaryItem.params.scopeNotEqual.size() > 0">
            AND (si.scope NOT IN
            <foreach item="item"
                     collection="salaryItem.params.scopeNotEqual"
                     index="index" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR si.scope IS NULL
            )
        </if>
        <!-- 数据范围过滤 -->
        ${salaryItem.params.dataScope}
        ORDER BY si.create_time DESC
    </select>
    <!--根据id集合获取数据-->
    <select id="getSalaryItemByIds" resultType="net.qixiaowei.operate.cloud.api.dto.salary.SalaryItemDTO">
        SELECT salary_item_id, first_level_item, second_level_item, third_level_item, scope, sort, delete_flag,
        create_by, create_time, update_by, update_time
        FROM salary_item
        WHERE salary_item_id IN
        <foreach item="item"
                 collection="salaryItemIds"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
        AND delete_flag = 0
    </select>
    <select id="getSalaryItemByThirdLevelItem"
            resultType="net.qixiaowei.operate.cloud.api.dto.salary.SalaryItemDTO">
        SELECT salary_item_id, first_level_item, second_level_item, third_level_item, scope, sort, delete_flag,
        create_by, create_time, update_by, update_time
        FROM salary_item
        WHERE third_level_item = #{thirdLevelItem}
        AND delete_flag = 0
    </select>
    <!--通过ID集合查找工资项-->
    <select id="selectSalaryItemBySalaryItemIds"
            resultType="net.qixiaowei.operate.cloud.api.dto.salary.SalaryItemDTO">
        SELECT salary_item_id, first_level_item, second_level_item, third_level_item, scope, sort, delete_flag,
        create_by, create_time, update_by, update_time
        FROM salary_item
        WHERE salary_item_id
        IN
        <foreach collection="salaryItemIds" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
        AND delete_flag = 0
    </select>
    <!--    从工资条配置中取值，取所有部门级且二级工资项目属于奖金的工资项目-->
    <select id="selectSalaryAddPrefabricate"
            resultType="net.qixiaowei.operate.cloud.api.dto.salary.SalaryItemDTO">
        SELECT salary_item_id, first_level_item, second_level_item, third_level_item, scope, sort, delete_flag,
        create_by, create_time, update_by, update_time
        FROM salary_item
        WHERE first_level_item =2
        AND second_level_item IN (1,2,3,4)
        AND scope =1
        AND delete_flag=0
    </select>
    <!--    查询战略奖的工资项id-->
    <select id="selectSalaryItemByAward" resultType="net.qixiaowei.operate.cloud.api.dto.salary.SalaryItemDTO">
        SELECT
        salary_item_id, first_level_item, second_level_item, third_level_item, scope, sort, delete_flag, create_by,
        create_time, update_by, update_time
        FROM salary_item
        WHERE third_level_item='战略奖'
        and delete_flag=0
    </select>
    <!--    所有二级工资项目为奖金且级别为部门级的三级工资项目-->
    <select id="selectSalaryItemByBonus" resultType="net.qixiaowei.operate.cloud.api.dto.salary.SalaryItemDTO">
        SELECT
        salary_item_id, first_level_item, second_level_item, third_level_item, scope, sort, delete_flag, create_by,
        create_time, update_by, update_time
        FROM salary_item
        WHERE first_level_item=2
        and second_level_item=4
        and scope =1
        and delete_flag=0
    </select>
    <select id="selectMaxSort" resultType="java.lang.Integer">
        SELECT MAX(sort) FROM salary_item
    </select>
    <!--    查找二级为奖金的三级工资条-->
    <select id="applyBonusList" resultType="net.qixiaowei.operate.cloud.api.dto.salary.SalaryItemDTO">
        SELECT
        salary_item_id, first_level_item, second_level_item, third_level_item, scope, sort, delete_flag, create_by,
        create_time, update_by, update_time
        FROM salary_item
        WHERE first_level_item=2
        and second_level_item=4
        and delete_flag=0
    </select>
    <!--    根据id查询所有二级工资项目为奖金且级别为部门级的三级工资项目-->
    <select id="selectSalaryItemByBonusId"
            resultType="net.qixiaowei.operate.cloud.api.dto.salary.SalaryItemDTO">
        SELECT
        salary_item_id, first_level_item, second_level_item, third_level_item, scope, sort, delete_flag, create_by,
        create_time, update_by, update_time
        FROM salary_item
        WHERE first_level_item=2
        and second_level_item=4
        and scope =1
        and delete_flag=0
        <if test="salaryItemId != null">
            and salary_item_id=#{salaryItemId}
        </if>
    </select>
    <!--    根据id查找二级为奖金的三级工资条-->
    <select id="applyByIdList" resultType="net.qixiaowei.operate.cloud.api.dto.salary.SalaryItemDTO">
        SELECT
        salary_item_id, first_level_item, second_level_item, third_level_item, scope, sort, delete_flag, create_by,
        create_time, update_by, update_time
        FROM salary_item
        WHERE first_level_item=2
        and second_level_item=4
        and delete_flag=0
        <if test="salaryItemId != null">
            and salary_item_id=#{salaryItemId}
        </if>
    </select>
    <!--    根据id查询所有二级工资项目为奖金且级别为公司级的三级工资项目-->
    <select id="selectSalaryItemByCompany"
            resultType="net.qixiaowei.operate.cloud.api.dto.salary.SalaryItemDTO">
        SELECT
        salary_item_id, first_level_item, second_level_item, third_level_item, scope, sort, delete_flag, create_by,
        create_time, update_by, update_time
        FROM salary_item
        WHERE first_level_item=2
        and second_level_item=4
        and scope =2
        and delete_flag=0
        <if test="salaryItemId != null">
            and salary_item_id=#{salaryItemId}
        </if>
    </select>
    <!--新增工资项-->
    <insert id="insertSalaryItem" useGeneratedKeys="true" keyProperty="salaryItemId">
        INSERT INTO salary_item
        (first_level_item,second_level_item,third_level_item,scope,sort,delete_flag,create_by,create_time,update_by,update_time)
        VALUES
        (#{salaryItem.firstLevelItem},#{salaryItem.secondLevelItem},#{salaryItem.thirdLevelItem},#{salaryItem.scope},#{salaryItem.sort},#{salaryItem.deleteFlag},#{salaryItem.createBy},#{salaryItem.createTime},#{salaryItem.updateBy},#{salaryItem.updateTime})
    </insert>
    <!--修改工资项-->
    <update id="updateSalaryItem">
        UPDATE salary_item
        SET
        <if test="salaryItem.firstLevelItem != null">
            first_level_item=#{salaryItem.firstLevelItem},
        </if>
        <if test="salaryItem.secondLevelItem != null">
            second_level_item=#{salaryItem.secondLevelItem},
        </if>
        <if test="salaryItem.thirdLevelItem != null and salaryItem.thirdLevelItem != ''">
            third_level_item=#{salaryItem.thirdLevelItem},
        </if>
        <if test="salaryItem.scope != null">
            scope=#{salaryItem.scope},
        </if>
        <if test="salaryItem.sort != null">
            sort=#{salaryItem.sort},
        </if>
        <if test="salaryItem.deleteFlag != null">
            delete_flag=#{salaryItem.deleteFlag},
        </if>
        <if test="salaryItem.createBy != null">
            create_by=#{salaryItem.createBy},
        </if>
        <if test="salaryItem.createTime != null">
            create_time=#{salaryItem.createTime},
        </if>
        <if test="salaryItem.updateBy != null">
            update_by=#{salaryItem.updateBy},
        </if>
        <if test="salaryItem.updateTime != null">
            update_time=#{salaryItem.updateTime}
        </if>
        WHERE
        salary_item_id=#{salaryItem.salaryItemId}
        AND
        delete_flag = 0
    </update>
    <!--逻辑删除工资项-->
    <update id="logicDeleteSalaryItemBySalaryItemId">
        UPDATE salary_item
        SET delete_flag= 1,
        update_by=#{updateBy},
        update_time=#{updateTime}
        WHERE
        salary_item_id=#{salaryItem.salaryItemId}
    </update>
    <!--逻辑批量删除工资项-->
    <update id="logicDeleteSalaryItemBySalaryItemIds">
        UPDATE salary_item
        SET delete_flag= 1,
        update_by=#{updateBy},
        update_time=#{updateTime}
        WHERE
        salary_item_id IN
        <foreach item="item"
                 collection="salaryItemIds"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <!--批量新增工资项-->
    <insert id="batchSalaryItem">
        INSERT INTO salary_item
        (first_level_item,second_level_item,third_level_item,scope,sort,delete_flag,create_by,create_time,update_by,update_time)
        VALUES
        <foreach item="item" index="index"
                 collection="salaryItems"
                 separator=",">
            (#{item.firstLevelItem},#{item.secondLevelItem},#{item.thirdLevelItem},#{item.scope},#{item.sort},#{item.deleteFlag},#{item.createBy},#{item.createTime},#{item.updateBy},#{item.updateTime})
        </foreach>
    </insert>

    <!--物理删除工资项-->
    <delete id="deleteSalaryItemBySalaryItemId">
        DELETE FROM salary_item
        WHERE salary_item_id=#{salaryItem}

    </delete>
    <!--物理批量删除工资项-->
    <delete id="deleteSalaryItemBySalaryItemIds">
        DELETE FROM salary_item
        WHERE salary_item_id IN
        <foreach item="item"
                 collection="salaryItemIds"
                 index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <!--批量修改工资项-->
    <update id="updateSalaryItems">
        update salary_item
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="salary_item_id=case" suffix="end,">
            </trim>
            <trim prefix="first_level_item=case" suffix="end,">
                <foreach collection="salaryItemList" item="item" index="index">
                    <if test="item.firstLevelItem != null">
                        when salary_item_id=#{item.salaryItemId} then #{item.firstLevelItem}
                    </if>
                </foreach>
            </trim>
            <trim prefix="second_level_item=case" suffix="end,">
                <foreach collection="salaryItemList" item="item" index="index">
                    <if test="item.secondLevelItem != null">
                        when salary_item_id=#{item.salaryItemId} then #{item.secondLevelItem}
                    </if>
                </foreach>
            </trim>
            <trim prefix="third_level_item=case" suffix="end,">
                <foreach collection="salaryItemList" item="item" index="index">
                    <if test="item.thirdLevelItem != null and item.thirdLevelItem != ''">
                        when salary_item_id=#{item.salaryItemId} then #{item.thirdLevelItem}
                    </if>
                </foreach>
            </trim>
            <trim prefix="scope=case" suffix="end,">
                <foreach collection="salaryItemList" item="item" index="index">
                    <if test="item.scope != null">
                        when salary_item_id=#{item.salaryItemId} then #{item.scope}
                    </if>
                </foreach>
            </trim>
            <trim prefix="sort=case" suffix="end,">
                <foreach collection="salaryItemList" item="item" index="index">
                    <if test="item.sort != null">
                        when salary_item_id=#{item.salaryItemId} then #{item.sort}
                    </if>
                </foreach>
            </trim>
            <trim prefix="delete_flag=case" suffix="end,">
                <foreach collection="salaryItemList" item="item" index="index">
                    <if test="item.deleteFlag != null">
                        when salary_item_id=#{item.salaryItemId} then #{item.deleteFlag}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_by=case" suffix="end,">
                <foreach collection="salaryItemList" item="item" index="index">
                    <if test="item.createBy != null">
                        when salary_item_id=#{item.salaryItemId} then #{item.createBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_time=case" suffix="end,">
                <foreach collection="salaryItemList" item="item" index="index">
                    <if test="item.createTime != null">
                        when salary_item_id=#{item.salaryItemId} then #{item.createTime}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_by=case" suffix="end,">
                <foreach collection="salaryItemList" item="item" index="index">
                    <if test="item.updateBy != null">
                        when salary_item_id=#{item.salaryItemId} then #{item.updateBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_time=case" suffix="end,">
                <foreach collection="salaryItemList" item="item" index="index">
                    <if test="item.updateTime != null">
                        when salary_item_id=#{item.salaryItemId} then #{item.updateTime}
                    </if>
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="salaryItemList" separator="or" item="item" index="index">
            salary_item_id=#{item.salaryItemId}
        </foreach>
        AND
        delete_flag = 0
    </update>
</mapper>


